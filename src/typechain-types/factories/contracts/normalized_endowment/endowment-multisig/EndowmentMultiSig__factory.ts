/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  EndowmentMultiSig,
  EndowmentMultiSigInterface,
} from "../../../../contracts/normalized_endowment/endowment-multisig/EndowmentMultiSig";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "transactionId",
        type: "uint256",
      },
    ],
    name: "Confirmation",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "transactionId",
        type: "uint256",
      },
    ],
    name: "Execution",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "transactionId",
        type: "uint256",
      },
    ],
    name: "ExecutionFailure",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnerAddition",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnerRemoval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "required",
        type: "uint256",
      },
    ],
    name: "RequirementChange",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "transactionId",
        type: "uint256",
      },
    ],
    name: "Revocation",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "transactionId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "string",
            name: "title",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "address",
            name: "destination",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "executed",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "metadata",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct MultiSigStorage.Transaction",
        name: "transaction",
        type: "tuple",
      },
    ],
    name: "Submission",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "EMITTER_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ENDOWMENT_ID",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_OWNER_COUNT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "addOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "required",
        type: "uint256",
      },
    ],
    name: "changeRequirement",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "transactionId",
        type: "uint256",
      },
    ],
    name: "confirmTransaction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "confirmations",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "transactionId",
        type: "uint256",
      },
    ],
    name: "executeTransaction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "transactionId",
        type: "uint256",
      },
    ],
    name: "getConfirmationCount",
    outputs: [
      {
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "transactionId",
        type: "uint256",
      },
    ],
    name: "getConfirmations",
    outputs: [
      {
        internalType: "address[]",
        name: "ownerConfirmations",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOwners",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "pending",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "executed",
        type: "bool",
      },
    ],
    name: "getTransactionCount",
    outputs: [
      {
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "from",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "to",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "pending",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "executed",
        type: "bool",
      },
    ],
    name: "getTransactionIds",
    outputs: [
      {
        internalType: "uint256[]",
        name: "transactionIds",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "endowmentId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "emitter",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "owners",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "required",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "requireexecution",
        type: "bool",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "transactionId",
        type: "uint256",
      },
    ],
    name: "isConfirmed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isOwner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "owners",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "removeOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "replaceOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "requireExecution",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "required",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "transactionId",
        type: "uint256",
      },
    ],
    name: "revokeConfirmation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "address",
        name: "destination",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "metadata",
        type: "bytes",
      },
    ],
    name: "submitTransaction",
    outputs: [
      {
        internalType: "uint256",
        name: "transactionId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "transactionCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "transactions",
    outputs: [
      {
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "address",
        name: "destination",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "bool",
        name: "executed",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "metadata",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6080806040523461001b5760016007556124ab90816100218239f35b600080fdfe6080806040526004361015610028575b5036156100205761001e611e68565b005b61001e611e68565b600090813560e01c90816301ffc9a714611aed57508063025e7c2714611aa9578063173825d91461190857806320ea8d861461180f5780632f54bf6e146117d05780633411c81c1461178457806354741525146116be5780637065cb4814611551578063784547a7146115285780638b51d13f146114885780638dcc95ca1461146a57806394645f2714611441578063969e7e34146111545780639ace38c21461104f578063a0e67e2b14610fc4578063a8abe69a14610e66578063b5dc40c314610d66578063b77bf60014610d48578063b781694a14610d25578063ba51a6df14610d08578063c01a8c8414610ce8578063d74f8edd14610ccc578063dc8452cd14610cae578063e20056e614610ab3578063ee22610b146108fa578063f06a7522146102295763f72b230d0361000f5734610226576060366003190112610226576004356001600160401b0381116102225761018a903690600401611c44565b50610193611b9e565b506101b660065460ff8160101c16159081610210575b81156101ed575b50611fbc565b60405162461bcd60e51b815260206004820152600f60248201526e139bdd08125b5c1b195b595b9d1959608a1b6044820152606490fd5b303b159150816101ff575b50826101b0565b60081c60ff166001149050826101f8565b9050600160ff8260081c1610906101a9565b5080fd5b80fd5b50346102265760c0366003190112610226576004356001600160401b0381116102225761025a903690600401611e21565b6024356001600160401b0381116106eb57610279903690600401611e21565b604435916001600160a01b03831683036108f5576084356001600160401b0381116108f1576102ac903690600401611e21565b9260a4356001600160401b0381116108ed576102cc903690600401611e21565b6001600160a01b038216156108ed57600554946040516102eb81611bd6565b84815285602082015260018060a01b038416604082015260643560608201528160808201528760a08201528260c082015286885287602052604088209080518051906001600160401b0382116107fb5781906103518261034b8754611cb2565b87612421565b602090601f8311600114610889578c9261087e575b50508160011b916000199060031b1c19161782555b602081015180516001600160401b0381116107fb578060018501926103aa826103a48654611cb2565b86612421565b602090601f831160011461081a578d9261080f575b50508160011b916000199060031b1c19161790555b6002820160018060a01b036040830151166bffffffffffffffffffffffff60a01b8254161790556060810151600383015560808101519081516001600160401b0381116107fb5760048401906104348161042e8454611cb2565b84612421565b60208c601f8311600114610791579060c09583610786575b50508160011b916000199060031b1c19161790555b6005830160a0820151151560ff801983541691161790550151908151906001600160401b038211610772576006829101926104a0826103a48654611cb2565b602090601f831160011461070e578b92610703575b50508160011b916000199060031b1c19161790555b6005546001810181116106ef5790600188959493920160055586855284602052867f180494405e1822cfac7f46cb28e05d25c4e51a01231c971781dfcab4f00639216105a1604088206040519182916020835260e060208401526006610534610100850183611cec565b91610582610552601f19948588820301604089015260018401611cec565b60028301546001600160a01b0316606088015260038301546080880152868103850160a088015260048301611cec565b9260ff600583015416151560c08701528584030160e086015201611cec565b0390a260018060a01b03600954169260085496604051956105c187611bd6565b865260208601526001600160a01b031660408501526064356060850152608084015260a0830184905260c0830152803b156106eb576106a99383604051809681958294631f9ecc9d60e31b8452600484015289602484015260606044840152610637815160e06064860152610144850190611d82565b60c061068961065860208501519360631994858983030160848a0152611d82565b60408501516001600160a01b031660a4880152606085015160c48801526080850151878203850160e4890152611d82565b9260a0810151151561010487015201519084830301610124850152611d82565b03925af180156106e0576106cc575b6020826106c4816120f1565b604051908152f35b6106d68391611bad565b61022257816106b8565b6040513d85823e3d90fd5b8280fd5b634e487b7160e01b88526011600452602488fd5b0151905038806104b5565b848c5260208c209250601f1984168c5b81811061075a5750908460019594939210610741575b505050811b0190556104ca565b015160001960f88460031b161c19169055388080610734565b9293602060018192878601518155019501930161071e565b634e487b7160e01b8a52604160045260248afd5b01519050388061044c565b91929394601f19841685845260208420935b8181106107e3575091600193918560c098979694106107ca575b505050811b019055610461565b015160001960f88460031b161c191690553880806107bd565b929360206001819287860151815501950193016107a3565b634e487b7160e01b8b52604160045260248bfd5b0151905038806103bf565b848e5260208e209250601f1984168e5b818110610866575090846001959493921061084d575b505050811b0190556103d4565b015160001960f88460031b161c19169055388080610840565b9293602060018192878601518155019501930161082a565b015190503880610366565b858d5260208d209250601f1984168d5b8181106108d557509084600195949392106108bc575b505050811b01825561037b565b015160001960f88460031b161c191690553880806108af565b92936020600181928786015181550195019301610899565b8580fd5b8480fd5b600080fd5b50346102265780602080600319360112610ab0576004353383526002825260ff60408420541615610aac57808352600182526040832033600052825260ff6040600020541615610aac5780835282825260ff600560408520015416610aac5761096281611ec2565b61096a575050f35b808352828252610a236040842060058101600160ff1982541617905560018060a01b039385806004876002860154166109b96003870154966109b26040518095819301611cec565b0383611c0c565b604051956109c687611bf1565b601d87527f63616c6c20726576657274656420776974686f7574206d657373616765000000868801528583519301915af13d15610aa3573d610a0781611e06565b90610a156040519283611c0c565b81528781933d92013e6123dd565b5060405191817f33e13ecb54c3076d8e8bb8c2881800a4d972b792045ffae98fdf46df365fed758580a26009541660085490803b156108f157838560449281958395637a2672c760e01b8552600485015260248401525af18015610a9857610a885750f35b610a9190611bad565b6102265780f35b6040513d84823e3d90fd5b606091506123dd565b5050fd5b50fd5b503461022657604036600319011261022657610acd611b72565b90610ad6611b88565b91303303610222576001600160a01b038181168084526002602052604084205460ff1615610caa5781851680855260ff6040862054166108f157845b60038054821015610ca057848491610b2984611b25565b9054911b1c1614610b4257610b3d90611e9d565b610b12565b8596610b50610b6f92611b25565b90919082549060031b9160018060a01b03809116831b921b1916179055565b81855260026020526040852060ff199081815416905581865260016040872091825416179055604051917f8001553a916ef2f495d26a907cc54d96ed840d7bda71e73194bf5a9df7a76b908680a27ff39e6e1eb0edcf53c221607b54b00cd28f3196fed0a24994dc308b8f611b682d8580a28160095416600854813b156108ed57630b058e4560e21b835260048301526001600160a01b038416602483015284908290604490829084905af1908115610c95578491610c81575b5050600954169060085490823b15610c7c57604051633419164560e21b815260048101929092526001600160a01b031660248201529082908290818381604481015b03925af18015610a9857610a885750f35b505050fd5b610c8a90611bad565b610aac578238610c29565b6040513d86823e3d90fd5b5050849550610b6f565b8380fd5b50346102265780600319360112610226576020600454604051908152f35b5034610226578060031936011261022657602060405160328152f35b503461022657602036600319011261022657610d056004356120f1565b80f35b503461022657602036600319011261022657610d0560043561201f565b5034610226578060031936011261022657602060ff600654166040519015158152f35b50346102265780600319360112610226576020600554604051908152f35b50346102265760208060031936011261022257600435906003805490610d8b82611f69565b928594865b848110610deb57878787610da382611f69565b925b828110610dbe5760405180610dba8682611dc2565b0390f35b610de6906001600160a01b03610dd48285611f9b565b5116610de08287611f9b565b52611e9d565b610da5565b818852600180845260408920610e0083611b25565b90546001600160a01b0391881b1c8116600090815291865260409091205460ff16610e36575b5050610e3190611e9d565b610d90565b610e41839993611b25565b905490871b1c16610e528389611f9b565b5281018091116106ef5795610e3138610e26565b50346102265760803660031901126102265760248035600435610e87611b9e565b926064359384151585036108f5576005805491610ea383611f69565b968892895b858110610f3b578a8a8a8a610ec5610ec08284611faf565b611f69565b92815b838110610f14578486604051918291602080840190808552835180925280604086019401925b828110610efd57505050500390f35b835185528695509381019392810192600101610eee565b80610f22610f369284611f9b565b51610de0610f308684611faf565b88611f9b565b610ec8565b8380610fac575b8015610f8d575b610f5c575b610f5790611e9d565b610ea8565b9384610f68828c611f9b565b5260018101809111610f7a5793610f4e565b634e487b7160e01b8b526011600452868bfd5b50828015610f495750808b528a60205260ff8260408d20015416610f49565b50808b528a60205260ff8260408d2001541615610f42565b5034610226578060031936011261022657604051600380548083529083526020808301937fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b92915b82821061102f57610dba8561102381890382611c0c565b60405191829182611dc2565b83546001600160a01b03168652948501946001938401939091019061100c565b50346102265760203660031901126102265760406111199160043581528060205220610dba6040519161108d836110868184611cec565b0384611c0c565b600661113f6040516110ad816110a68160018801611cec565b0382611c0c565b600284015460038501546040516001600160a01b0390921692611127906110e2846110db8160048c01611cec565b0385611c0c565b61110560ff60058a015416986110fe604051809a819301611cec565b0388611c0c565b6040519a8b9a60e08c5260e08c0190611d82565b908a820360208c0152611d82565b92604089015260608801528682036080880152611d82565b91151560a085015283820360c0850152611d82565b50346102265760a03660031901126102265761116e611b88565b6044356001600160401b0381116106eb5761118d903690600401611c44565b606435608435928315158094036108f557600680549260ff93848160101c161591828093611432575b8015611418575b6111c690611fbc565b61ff001980831661010090811786559284611405575b506001600160a01b0395861680156113ce576004356008556bffffffffffffffffffffffff60a01b6009541617600955845490878260101c1615938491829586936113bf575b80156113a5575b61123290611fbc565b8316178655611392575b50865160328111159182611387575b8261137d575b5081611373575b501561136f57875b86518110156112da57846112748289611f9b565b511689526002906020918083528760408c20541615806112c5575b156112c1576112bc92876112a3848c611f9b565b51168c525260408a20805460ff19166001179055611e9d565b611260565b8a80fd5b50866112d1838b611f9b565b5116151561128f565b50825487861660ff1982168117855589955091611334575b50506112fc575080f35b62ff00001981541690557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160018152a180f35b62ff00ff19161782557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160018152a183806112f2565b8780fd5b9050151538611258565b1515915038611251565b81811115925061124b565b62ffff001916620101001784553861123c565b50303b1580156112295750600884901c8a16600114611229565b5060018a8560081c1610611222565b60405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964204164647265737360881b6044820152606490fd5b62ffff00191662010100178555386111dc565b50303b1580156111bd5750600882901c86166001146111bd565b506001868360081c16106111b6565b50346102265780600319360112610226576009546040516001600160a01b039091168152602090f35b50346102265780600319360112610226576020600854604051908152f35b5034610226576020908160031936011261022657600380548291600435835b8381106114b8578686604051908152f35b8185526001808852604086206114cd83611b25565b905490861b1c6001600160a01b03166000908152908952604090205460ff16611500575b506114fb90611e9d565b6114a7565b8691960180911161151457946114fb6114f1565b634e487b7160e01b85526011600452602485fd5b5034610226576020366003190112610226576020611547600435611ec2565b6040519015158152f35b50346102265760203660031901126102265761156b611b72565b90303303610226576001600160a01b03828116808352600260205260408320549193909160ff166106eb5781156106eb57600354600181018091116116aa57600454906032811115918261169f575b82611695575b508161168b575b50156106eb57818352600260205260408320805460ff1916600117905560035493680100000000000000008510156116775761160e82610b50876001889901600355611b25565b604051927ff39e6e1eb0edcf53c221607b54b00cd28f3196fed0a24994dc308b8f611b682d8580a26009541660085490803b156108f157633419164560e21b845260048401919091526001600160a01b0390911660248301528290829081838160448101610c6b565b634e487b7160e01b84526041600452602484fd5b90501515386115c7565b15159150386115c0565b8181111592506115ba565b634e487b7160e01b84526011600452602484fd5b50346102265760403660031901126102265760043580151581036108f55760249182359081151582036108f5578092819260058054945b85811061170757602087604051908152f35b838061176c575b801561174d575b611728575b61172390611e9d565b6116f5565b956001810180911161173a579561171a565b634e487b7160e01b855260116004528785fd5b5082801561171557508085528460205260ff8260408720015416611715565b508085528460205260ff82604087200154161561170e565b50346102265760403660031901126102265760406117a0611b88565b9160043581526001602052209060018060a01b0316600052602052602060ff604060002054166040519015158152f35b50346102265760203660031901126102265760209060ff906040906001600160a01b036117fb611b72565b168152600284522054166040519015158152f35b50346102265780602080600319360112610ab0576004359061182f612387565b3383526002815260ff60408420541615610aac57818352600181526040832033600052815260ff6040600020541615610aac5781835282815260ff600560408520015416610aac576001815260408320903360005252604060002060ff1981541690556040519080337ff6a317157440607f36269043eb55f1287a5a19ba2216afeab88cd46cbcfb88e98580a36001600755600954600854906001600160a01b0316803b156108f1576303df7ba160e31b8452600484019190915233602484015260448301919091528290829081838160648101610c6b565b503461022657602036600319011261022657611922611b72565b303303610222576001600160a01b0381811680845260026020526040842080549293919260ff8116156108ed5760ff19169055835b600380546000198101908111611a955780831015611a8b57848661197a85611b25565b905490851b1c161461199657505061199190611e9d565b611957565b856119b893926119ac610b509398969798611b25565b9054911b1c1691611b25565b6003548015611a775784929190600019016119d281611b25565b8382549160031b1b19169055806003558060045411611a68575b50604051937f8001553a916ef2f495d26a907cc54d96ed840d7bda71e73194bf5a9df7a76b908480a26009541660085491813b15610caa57630b058e4560e21b855260048501929092526001600160a01b0390911660248401528290604490829084905af18015610a9857611a5f575080f35b610d0590611bad565b611a719061201f565b386119ec565b634e487b7160e01b85526031600452602485fd5b50505090916119b8565b634e487b7160e01b87526011600452602487fd5b50346102265760203660031901126102265760043590600354821015610226576020611ad483611b25565b905460405160039290921b1c6001600160a01b03168152f35b9050346102225760203660031901126102225760043563ffffffff60e01b81168091036106eb576301ffc9a760e01b14815260209150f35b600354811015611b5c5760036000527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b0190600090565b634e487b7160e01b600052603260045260246000fd5b600435906001600160a01b03821682036108f557565b602435906001600160a01b03821682036108f557565b6044359081151582036108f557565b6001600160401b038111611bc057604052565b634e487b7160e01b600052604160045260246000fd5b60e081019081106001600160401b03821117611bc057604052565b604081019081106001600160401b03821117611bc057604052565b90601f801991011681019081106001600160401b03821117611bc057604052565b6001600160401b038111611bc05760051b60200190565b81601f820112156108f557803591611c5b83611c2d565b92611c696040519485611c0c565b808452602092838086019260051b8201019283116108f5578301905b828210611c93575050505090565b81356001600160a01b03811681036108f5578152908301908301611c85565b90600182811c92168015611ce2575b6020831014611ccc57565b634e487b7160e01b600052602260045260246000fd5b91607f1691611cc1565b9060009291805491611cfd83611cb2565b918282526001938481169081600014611d5f5750600114611d1f575b50505050565b90919394506000526020928360002092846000945b838610611d4b575050505001019038808080611d19565b805485870183015294019385908201611d34565b9294505050602093945060ff191683830152151560051b01019038808080611d19565b919082519283825260005b848110611dae575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201611d8d565b6020908160408183019282815285518094520193019160005b828110611de9575050505090565b83516001600160a01b031685529381019392810192600101611ddb565b6001600160401b038111611bc057601f01601f191660200190565b81601f820112156108f557803590611e3882611e06565b92611e466040519485611c0c565b828452602083830101116108f557816000926020809301838601378301015290565b34611e6f57565b6040513481527fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c60203392a2565b6000198114611eac5760010190565b634e487b7160e01b600052601160045260246000fd5b6000806003918254936004908154935b868110611ee55750505050505050600090565b81600052600160ff60208281526040908160002090611f0386611b25565b9054908c1b1c6001600160a01b03166000908152919052205416611f43575b858514611f385750611f3390611e9d565b611ed2565b965050505050505090565b93848101809111611f545793611f22565b601184634e487b7160e01b6000525260246000fd5b90611f7382611c2d565b611f806040519182611c0c565b8281528092611f91601f1991611c2d565b0190602036910137565b8051821015611b5c5760209160051b010190565b91908203918211611eac57565b15611fc357565b60405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608490fd5b3033036108f557600354603281111590816120e6575b816120dc575b816120d2575b50156108f5577fa3f1ee9126a074d9326c682f561767f710e927faa811f7a99829d49dc421797a6020604051838152a16009546008546001600160a01b0390911691823b156108f557604460009283604051958694859363d6df593560e01b8552600485015260248401525af180156120c6576120bb5750565b6120c490611bad565b565b6040513d6000823e3d90fd5b9050151538612041565b821515915061203b565b808311159150612035565b6120f9612387565b6000903382526020906002825260ff91604092808486205416156108f157828552848252838520600201546001600160a01b0392908316156108ed5760019182825285872033885282528086882054166123835784875282825285872033885282528587209060ff1991848382541617905585337f4a504a94899432a9846e1aa406dceb1bcfd538bb839071d49d1e5e23f5be30ef8a80a380600654161561220c575b50505060075560095416600854813b156108f15783516338cf071f60e11b81526004810191909152336024820152604481019290925290919083908390606490829084905af190811561220357506121f2575050565b6121fc8291611bad565b6102265750565b513d84823e3d90fd5b600283528087892054161561136f5785885283835286882033895283528087892054161561136f5785885287835260058789200154166123835761224f85611ec2565b61225a575b8061219c565b6122ff918588528781528688209184600584019182541617905587806004876002860154166122976003870154966109b28d518095819301611cec565b8a51956122a387611bf1565b601d87527f63616c6c20726576657274656420776974686f7574206d657373616765000000868801528583519301915af13d15610aa3573d6122e481611e06565b906122f18a519283611c0c565b81528981933d92013e6123dd565b508351837f33e13ecb54c3076d8e8bb8c2881800a4d972b792045ffae98fdf46df365fed758780a28260095416600854813b1561136f576044838980948294637a2672c760e01b845260048401528960248401525af1801561237957612366575b80612254565b61237290959195611bad565b9338612360565b85513d88823e3d90fd5b8680fd5b600260075414612398576002600755565b60405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b909190156123e9575090565b8151156123f95750805190602001fd5b60405162461bcd60e51b81526020600482015290819061241d906024830190611d82565b0390fd5b90601f811161242f57505050565b600091825260208220906020601f850160051c8301941061246b575b601f0160051c01915b82811061246057505050565b818155600101612454565b909250829061244b56fea2646970667358221220dd0eda6c5242ec912fcd812f15822021abe072e8b813efa39d81da22e530fc0864736f6c63430008120033";

type EndowmentMultiSigConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EndowmentMultiSigConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EndowmentMultiSig__factory extends ContractFactory {
  constructor(...args: EndowmentMultiSigConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<EndowmentMultiSig> {
    return super.deploy(overrides || {}) as Promise<EndowmentMultiSig>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): EndowmentMultiSig {
    return super.attach(address) as EndowmentMultiSig;
  }
  override connect(signer: Signer): EndowmentMultiSig__factory {
    return super.connect(signer) as EndowmentMultiSig__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EndowmentMultiSigInterface {
    return new utils.Interface(_abi) as EndowmentMultiSigInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): EndowmentMultiSig {
    return new Contract(address, _abi, signerOrProvider) as EndowmentMultiSig;
  }
}
