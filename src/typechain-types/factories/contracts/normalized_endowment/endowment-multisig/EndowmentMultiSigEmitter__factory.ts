/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  EndowmentMultiSigEmitter,
  EndowmentMultiSigEmitterInterface,
} from "../../../../contracts/normalized_endowment/endowment-multisig/EndowmentMultiSigEmitter";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "endowmentId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "transactionId",
        type: "uint256",
      },
    ],
    name: "EndowmentConfirmation",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "endowmentId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "EndowmentDeposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "endowmentId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "transactionId",
        type: "uint256",
      },
    ],
    name: "EndowmentExecution",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "endowmentId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "transactionId",
        type: "uint256",
      },
    ],
    name: "EndowmentExecutionFailure",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "endowmentId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "EndowmentOwnerAddition",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "endowmentId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "EndowmentOwnerRemoval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "endowmentId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "required",
        type: "uint256",
      },
    ],
    name: "EndowmentRequirementChange",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "endowmentId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "transactionId",
        type: "uint256",
      },
    ],
    name: "EndowmentRevocation",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "endowmentId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "transactionId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "string",
            name: "title",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "address",
            name: "destination",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "executed",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "metadata",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct MultiSigStorage.Transaction",
        name: "transaction",
        type: "tuple",
      },
    ],
    name: "EndowmentSubmission",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "multisigAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "endowmentId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "emitter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "owners",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "required",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "requireexecution",
        type: "bool",
      },
    ],
    name: "MultisigCreated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "endowmentId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "addOwnerEndowment",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "endowmentId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "transactionId",
        type: "uint256",
      },
    ],
    name: "confirmEndowment",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "multisigAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "endowmentId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "emitter",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "owners",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "required",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "requireexecution",
        type: "bool",
      },
    ],
    name: "createMultisig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "endowmentId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "depositEndowment",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "endowmentId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "transactionId",
        type: "uint256",
      },
    ],
    name: "executeEndowment",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "endowmentId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "transactionId",
        type: "uint256",
      },
    ],
    name: "executeFailureEndowment",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "multisigfactory",
        type: "address",
      },
    ],
    name: "initEndowmentMultiSigEmitter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "endowmentId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "removeOwnerEndowment",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "endowmentId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "required",
        type: "uint256",
      },
    ],
    name: "requirementChangeEndowment",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "endowmentId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "transactionId",
        type: "uint256",
      },
    ],
    name: "revokeEndowment",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "endowmentId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "transactionId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "string",
            name: "title",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "address",
            name: "destination",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "executed",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "metadata",
            type: "bytes",
          },
        ],
        internalType: "struct MultiSigStorage.Transaction",
        name: "transaction",
        type: "tuple",
      },
    ],
    name: "submitEndowment",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608080604052346100205760ff196000541660005561094190816100268239f35b600080fdfe6040608081526004908136101561001557600080fd5b60009160e08335811c80629a3d061461074d5780631efbdd08146107175780632c163914146106d75780634cde2799146106a1578063719e0e3e1461062a5780637a2672c7146105f7578063a6635fa21461043b578063c57c815d14610371578063d0645914146102f0578063d6df5935146102945763fcf664e81461009a57600080fd5b346102905760031960603682011261028c576044359167ffffffffffffffff91828411610288578190843603011261028457845190808201828110848211176102715786528385013583811161026d576100f99086369187010161083d565b8252602484013583811161026d576101169086369187010161083d565b936020830194855261012a604482016107c3565b9087840191825260608401606482013581526084820135868111610269576101579089369185010161083d565b916080860192835260a48101359687151588036102655760a0870197885260c48201359081116102655761018f913691018a0161083d565b9460c08101958652338b526001602052898b205460ff166101af90610890565b8951998a99358a5260243560208b0152890160609052518460608a015261014089016101da916108cb565b9651605f1997888a82030160808b01526101f3916108cb565b92516001600160a01b031660a08901525160c08801525186820386019287019290925261021f916108cb565b9151151561010085015251918382030161012084015261023e916108cb565b037fa2806c76ea23a094b70f4c6920ec8e9b804d10467c3b04a493ade89ed370fc1491a180f35b8b80fd5b8a80fd5b8780fd5b634e487b7160e01b885260418652602488fd5b8580fd5b8680fd5b8480fd5b8380fd5b505050346102ec577faac3cd9bc9dae4dd99f5738a7de4671af3df56ead26e6e17544981f9a84652ed906102c73661077c565b33855260016020526102de60ff8487205416610890565b82519182526020820152a180f35b5080fd5b5050903461036d578060031936011261036d577f8bdf3980a6523641ffb824bd83fb88e5b6eb916b180b1dfc7112a4ffb8849f0491610367610330610797565b92338652600160205261034860ff8288205416610890565b51913582526001600160a01b0390921660208201529081906040820190565b0390a180f35b8280fd5b838584346102ec5760203660031901126102ec5761038d6107ad565b6001600160a01b038116156104065782549160ff83166103cd57506001600160a81b031990911660089190911b610100600160a81b031617600117815580f35b606490602086519162461bcd60e51b83528201526013602482015272105b1c9958591e481a5b9a5d1a585b1a5e9959606a1b6044820152fd5b835162461bcd60e51b8152602081840152600f60248201526e496e76616c6964204164647265737360881b6044820152606490fd5b5090346102905760c0366003190112610290576104566107ad565b916044356001600160a01b038181169291839003610288576064359067ffffffffffffffff928383116105f357366023840112156105f357828601359384116105e0578360051b96602093846104ad818b01610801565b80978152016024819a830101913683116105dc576024879101915b8383106105c4575050505060a4359687151580980361026957838b5460081c16330361058a57509180959493921692838a52600194858452898b208660ff1982541617905589519960c08b01958b52602435858c01528a015260c060608a0152518093528701959388905b83821061057357897f1953251b48e146eba697dd39efd1f30bda684efc2c1631b559447ae9c2dbd01f8a808b8b608435608084015260a08301520390a180f35b855181168852968201969482019490840190610533565b895162461bcd60e51b815290810185905260146024820152734e6f74206d756c746973696720666163746f727960601b6044820152606490fd5b81906105cf846107c3565b81520191019086906104c8565b8c80fd5b634e487b7160e01b895260418652602489fd5b8880fd5b505050346102ec577f38ee349836cf24adafe448482f489eaf4b97e6ea3b4f9f52ca2f6677affcd968906102c73661077c565b505050346102ec576103677f8be764692d684bffbe203086b11cbb096d4aa07a285f83ede38890084c886e9a91610660366107d7565b90939192338752600160205261067b60ff8289205416610890565b519283526001600160a01b03909316602083015260408201929092529081906060820190565b505050346102ec576103677f124b82bb5704da5f828628e8390ef028ab36c6792f575a37def1fae38584796991610660366107d7565b5050903461036d578060031936011261036d577f576fa1e54c33e168683a198ff41a85ab5bb9933347a712f9a9e36bc2b1a8236b91610367610330610797565b505050346102ec576103677fd3c1d432952273e022017a75b5c7b3f94f534b87a8c5d77426f13aab2a6bbe8291610660366107d7565b505050346102ec577f952b6effd8a09725abd1611d1daf1f22338ae324a7e161f87bace4cdccee1f50906102c7365b6040906003190112610792576004359060243590565b600080fd5b602435906001600160a01b038216820361079257565b600435906001600160a01b038216820361079257565b35906001600160a01b038216820361079257565b606090600319011261079257600435906024356001600160a01b0381168103610792579060443590565b6040519190601f01601f1916820167ffffffffffffffff81118382101761082757604052565b634e487b7160e01b600052604160045260246000fd5b81601f820112156107925780359067ffffffffffffffff82116108275761086d601f8301601f1916602001610801565b928284526020838301011161079257816000926020809301838601378301015290565b1561089757565b60405162461bcd60e51b815260206004820152600c60248201526b155b985d5d1a1bdc9a5e995960a21b6044820152606490fd5b919082519283825260005b8481106108f7575050826000602080949584010152601f8019910116010190565b6020818301810151848301820152016108d656fea2646970667358221220ceb45f446fef1e1f5d33b5e53f94deb0d27c904ef7d4503b64c80de0a20b319c64736f6c63430008120033";

type EndowmentMultiSigEmitterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EndowmentMultiSigEmitterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EndowmentMultiSigEmitter__factory extends ContractFactory {
  constructor(...args: EndowmentMultiSigEmitterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<EndowmentMultiSigEmitter> {
    return super.deploy(overrides || {}) as Promise<EndowmentMultiSigEmitter>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): EndowmentMultiSigEmitter {
    return super.attach(address) as EndowmentMultiSigEmitter;
  }
  override connect(signer: Signer): EndowmentMultiSigEmitter__factory {
    return super.connect(signer) as EndowmentMultiSigEmitter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EndowmentMultiSigEmitterInterface {
    return new utils.Interface(_abi) as EndowmentMultiSigEmitterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): EndowmentMultiSigEmitter {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as EndowmentMultiSigEmitter;
  }
}
