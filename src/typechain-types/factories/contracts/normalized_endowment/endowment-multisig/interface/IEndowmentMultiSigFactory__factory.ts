/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IEndowmentMultiSigFactory,
  IEndowmentMultiSigFactoryInterface,
} from "../../../../../contracts/normalized_endowment/endowment-multisig/interface/IEndowmentMultiSigFactory";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "endowmentId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "emitterAddress",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "owners",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "required",
        type: "uint256",
      },
    ],
    name: "create",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "endowmentId",
        type: "uint256",
      },
    ],
    name: "endowmentIdToMultisig",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "implementationAddress",
        type: "address",
      },
    ],
    name: "updateImplementation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "proxyAdminAddress",
        type: "address",
      },
    ],
    name: "updateProxyAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IEndowmentMultiSigFactory__factory {
  static readonly abi = _abi;
  static createInterface(): IEndowmentMultiSigFactoryInterface {
    return new utils.Interface(_abi) as IEndowmentMultiSigFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IEndowmentMultiSigFactory {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as IEndowmentMultiSigFactory;
  }
}
