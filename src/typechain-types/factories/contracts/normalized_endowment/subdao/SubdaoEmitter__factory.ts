/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  SubdaoEmitter,
  SubdaoEmitterInterface,
} from "../../../../contracts/normalized_endowment/subdao/SubdaoEmitter";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "subdao",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint32",
            name: "id",
            type: "uint32",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "quorum",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "threshold",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "votingPeriod",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timelockPeriod",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expirationPeriod",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "proposalDeposit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "snapshotPeriod",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "enum AngelCoreStruct.TokenType",
                name: "token",
                type: "uint8",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "existingCw20Data",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "newCw20InitialSupply",
                    type: "uint256",
                  },
                  {
                    internalType: "string",
                    name: "newCw20Name",
                    type: "string",
                  },
                  {
                    internalType: "string",
                    name: "newCw20Symbol",
                    type: "string",
                  },
                  {
                    components: [
                      {
                        internalType: "enum AngelCoreStruct.veTypeEnum",
                        name: "ve_type",
                        type: "uint8",
                      },
                      {
                        components: [
                          {
                            internalType: "uint128",
                            name: "value",
                            type: "uint128",
                          },
                          {
                            internalType: "uint256",
                            name: "scale",
                            type: "uint256",
                          },
                          {
                            internalType: "uint128",
                            name: "slope",
                            type: "uint128",
                          },
                          {
                            internalType: "uint128",
                            name: "power",
                            type: "uint128",
                          },
                        ],
                        internalType: "struct AngelCoreStruct.veTypeData",
                        name: "data",
                        type: "tuple",
                      },
                    ],
                    internalType: "struct AngelCoreStruct.veType",
                    name: "bondingveveType",
                    type: "tuple",
                  },
                  {
                    internalType: "string",
                    name: "bondingveName",
                    type: "string",
                  },
                  {
                    internalType: "string",
                    name: "bondingveSymbol",
                    type: "string",
                  },
                  {
                    internalType: "uint256",
                    name: "bondingveDecimals",
                    type: "uint256",
                  },
                  {
                    internalType: "address",
                    name: "bondingveReserveDenom",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "bondingveReserveDecimals",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "bondingveUnbondingPeriod",
                    type: "uint256",
                  },
                ],
                internalType: "struct AngelCoreStruct.DaoTokenData",
                name: "data",
                type: "tuple",
              },
            ],
            internalType: "struct AngelCoreStruct.DaoToken",
            name: "token",
            type: "tuple",
          },
          {
            internalType: "enum AngelCoreStruct.EndowmentType",
            name: "endow_type",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "endowOwner",
            type: "address",
          },
          {
            internalType: "address",
            name: "registrarContract",
            type: "address",
          },
        ],
        indexed: false,
        internalType: "struct subDaoMessage.InstantiateMsg",
        name: "instantiateMsg",
        type: "tuple",
      },
    ],
    name: "SubdaoInitialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "subdao",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "SubdaoTransfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "subdao",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "SubdaoTransferFrom",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "subdao",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "registrarContract",
            type: "address",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "address",
            name: "daoToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "veToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "swapFactory",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "quorum",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "threshold",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "votingPeriod",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timelockPeriod",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expirationPeriod",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "proposalDeposit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "snapshotPeriod",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct subDaoStorage.Config",
        name: "config",
        type: "tuple",
      },
    ],
    name: "SubdaoUpdateConfig",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "subdao",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "creator",
            type: "address",
          },
          {
            internalType: "enum subDaoStorage.PollStatus",
            name: "status",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "yesVotes",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "noVotes",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "startBlock",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "startTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endHeight",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "title",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "string",
            name: "link",
            type: "string",
          },
          {
            components: [
              {
                internalType: "uint256[]",
                name: "order",
                type: "uint256[]",
              },
              {
                internalType: "address[]",
                name: "contractAddress",
                type: "address[]",
              },
              {
                internalType: "bytes[]",
                name: "execution_message",
                type: "bytes[]",
              },
            ],
            internalType: "struct subDaoStorage.ExecuteData",
            name: "executeData",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "depositAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalBalanceAtEndPoll",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "stakedAmount",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct subDaoStorage.Poll",
        name: "poll",
        type: "tuple",
      },
    ],
    name: "SubdaoUpdatePoll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "subdao",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "enum subDaoStorage.PollStatus",
        name: "pollStatus",
        type: "uint8",
      },
    ],
    name: "SubdaoUpdatePollStatus",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "subdao",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "pollCount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalShare",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalDeposit",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct subDaoStorage.State",
        name: "state",
        type: "tuple",
      },
    ],
    name: "SubdaoUpdateState",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "subdao",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "pollId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "voter",
        type: "address",
      },
      {
        components: [
          {
            internalType: "enum subDaoStorage.VoteOption",
            name: "vote",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "balance",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "voted",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct subDaoStorage.VoterInfo",
        name: "voterInfo",
        type: "tuple",
      },
    ],
    name: "SubdapUpdateVotingStatus",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "accountscontract",
        type: "address",
      },
    ],
    name: "initEmitter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "subdao",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint32",
            name: "id",
            type: "uint32",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "quorum",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "threshold",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "votingPeriod",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timelockPeriod",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expirationPeriod",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "proposalDeposit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "snapshotPeriod",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "enum AngelCoreStruct.TokenType",
                name: "token",
                type: "uint8",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "existingCw20Data",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "newCw20InitialSupply",
                    type: "uint256",
                  },
                  {
                    internalType: "string",
                    name: "newCw20Name",
                    type: "string",
                  },
                  {
                    internalType: "string",
                    name: "newCw20Symbol",
                    type: "string",
                  },
                  {
                    components: [
                      {
                        internalType: "enum AngelCoreStruct.veTypeEnum",
                        name: "ve_type",
                        type: "uint8",
                      },
                      {
                        components: [
                          {
                            internalType: "uint128",
                            name: "value",
                            type: "uint128",
                          },
                          {
                            internalType: "uint256",
                            name: "scale",
                            type: "uint256",
                          },
                          {
                            internalType: "uint128",
                            name: "slope",
                            type: "uint128",
                          },
                          {
                            internalType: "uint128",
                            name: "power",
                            type: "uint128",
                          },
                        ],
                        internalType: "struct AngelCoreStruct.veTypeData",
                        name: "data",
                        type: "tuple",
                      },
                    ],
                    internalType: "struct AngelCoreStruct.veType",
                    name: "bondingveveType",
                    type: "tuple",
                  },
                  {
                    internalType: "string",
                    name: "bondingveName",
                    type: "string",
                  },
                  {
                    internalType: "string",
                    name: "bondingveSymbol",
                    type: "string",
                  },
                  {
                    internalType: "uint256",
                    name: "bondingveDecimals",
                    type: "uint256",
                  },
                  {
                    internalType: "address",
                    name: "bondingveReserveDenom",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "bondingveReserveDecimals",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "bondingveUnbondingPeriod",
                    type: "uint256",
                  },
                ],
                internalType: "struct AngelCoreStruct.DaoTokenData",
                name: "data",
                type: "tuple",
              },
            ],
            internalType: "struct AngelCoreStruct.DaoToken",
            name: "token",
            type: "tuple",
          },
          {
            internalType: "enum AngelCoreStruct.EndowmentType",
            name: "endow_type",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "endowOwner",
            type: "address",
          },
          {
            internalType: "address",
            name: "registrarContract",
            type: "address",
          },
        ],
        internalType: "struct subDaoMessage.InstantiateMsg",
        name: "instantiateMsg",
        type: "tuple",
      },
    ],
    name: "initializeSubdao",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFromSubdao",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferSubdao",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "registrarContract",
            type: "address",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "address",
            name: "daoToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "veToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "swapFactory",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "quorum",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "threshold",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "votingPeriod",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timelockPeriod",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expirationPeriod",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "proposalDeposit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "snapshotPeriod",
            type: "uint256",
          },
        ],
        internalType: "struct subDaoStorage.Config",
        name: "config",
        type: "tuple",
      },
    ],
    name: "updateSubdaoConfig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "creator",
            type: "address",
          },
          {
            internalType: "enum subDaoStorage.PollStatus",
            name: "status",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "yesVotes",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "noVotes",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "startBlock",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "startTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endHeight",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "title",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "string",
            name: "link",
            type: "string",
          },
          {
            components: [
              {
                internalType: "uint256[]",
                name: "order",
                type: "uint256[]",
              },
              {
                internalType: "address[]",
                name: "contractAddress",
                type: "address[]",
              },
              {
                internalType: "bytes[]",
                name: "execution_message",
                type: "bytes[]",
              },
            ],
            internalType: "struct subDaoStorage.ExecuteData",
            name: "executeData",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "depositAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalBalanceAtEndPoll",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "stakedAmount",
            type: "uint256",
          },
        ],
        internalType: "struct subDaoStorage.Poll",
        name: "poll",
        type: "tuple",
      },
    ],
    name: "updateSubdaoPoll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "creator",
            type: "address",
          },
          {
            internalType: "enum subDaoStorage.PollStatus",
            name: "status",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "yesVotes",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "noVotes",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "startBlock",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "startTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endHeight",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "title",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "string",
            name: "link",
            type: "string",
          },
          {
            components: [
              {
                internalType: "uint256[]",
                name: "order",
                type: "uint256[]",
              },
              {
                internalType: "address[]",
                name: "contractAddress",
                type: "address[]",
              },
              {
                internalType: "bytes[]",
                name: "execution_message",
                type: "bytes[]",
              },
            ],
            internalType: "struct subDaoStorage.ExecuteData",
            name: "executeData",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "depositAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalBalanceAtEndPoll",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "stakedAmount",
            type: "uint256",
          },
        ],
        internalType: "struct subDaoStorage.Poll",
        name: "poll",
        type: "tuple",
      },
      {
        internalType: "enum subDaoStorage.PollStatus",
        name: "pollStatus",
        type: "uint8",
      },
    ],
    name: "updateSubdaoPollAndStatus",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "pollCount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalShare",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalDeposit",
            type: "uint256",
          },
        ],
        internalType: "struct subDaoStorage.State",
        name: "state",
        type: "tuple",
      },
    ],
    name: "updateSubdaoState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pollId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "voter",
        type: "address",
      },
      {
        components: [
          {
            internalType: "enum subDaoStorage.VoteOption",
            name: "vote",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "balance",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "voted",
            type: "bool",
          },
        ],
        internalType: "struct subDaoStorage.VoterInfo",
        name: "voterInfo",
        type: "tuple",
      },
    ],
    name: "updateVotingStatus",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608080604052346100205760ff196000541660005561131b90816100268239f35b600080fdfe6080604052600436101561001257600080fd5b60003560e01c80631dfd08c8146106f75780632103dd721461066d5780633b3c18771461059857806360fb85bd14610512578063bfecf5be14610432578063cc47f08a1461039e578063efaf65201461031b578063f1b769661461024a5763f79aa7451461007f57600080fd5b3461022f5761018036600319011261022f5760405161018081018181106001600160401b03821117610234576040526100b6610c87565b81526100c0610c9d565b60208201526100cd610cb3565b60408201526064356001600160a01b038116810361022f5760608201526084356001600160a01b038116810361022f57816101a09160807fe2472413fc154370d7f9f8b5293189a9e463bd2ee20b55585be20b5eae28679394015260a43560a082015260c43560c082015260e43560e08201526101043561010082015261012435610120820152610144356101408201526101643561016082015233600052600160205261018260ff6040600020541661104f565b6101606040519133835260018060a01b03815116602084015260018060a01b03602082015116604084015260018060a01b03604082015116606084015260018060a01b03606082015116608084015260018060a01b0360808201511660a084015260a081015160c084015260c081015160e084015260e0810151610100840152610100810151610120840152610120810151610140840152610140810151828401520151610180820152a1005b600080fd5b634e487b7160e01b600052604160045260246000fd5b3461022f57606036600319011261022f576004356024356001600160401b03811161022f5761027d903690600401610dca565b9060443590600582101561022f576103186060927f430f5b080fdf16ecd0ecdc74d13ab3c975903940031db9c221ea3bb9e6fd9c986102ff7f8c5daac18f9ab14687e32950599e05e3b689af07060e556e5227d725fe92e2a9963360005260016020526102f160ff6040600020541661104f565b604051918291873384611101565b0390a160405192338452602084015260408301906110f4565ba1005b3461022f57604036600319011261022f576024356001600160401b03811161022f5761039961036f7f430f5b080fdf16ecd0ecdc74d13ab3c975903940031db9c221ea3bb9e6fd9c98923690600401610dca565b33600052600160205261038960ff6040600020541661104f565b6040519182916004353384611101565b0390a1005b3461022f57608036600319011261022f577fdcd71bb5ae1441c83cb15bd0e40e8dfeab7715ac77f33fa746f370b7e4746b7e60a06103da610c87565b6103e2610c9d565b6103ea610cb3565b33600052600160205261040460ff6040600020541661104f565b60405192338452600180861b03928380921660208601521660408401521660608201526064356080820152a1005b3461022f57602036600319011261022f5761044b610c87565b6001600160a01b038116156104c35760005460ff8116610488576001600160a81b03191660089190911b610100600160a81b031617600117600055005b60405162461bcd60e51b8152602060048201526013602482015272105b1c9958591e48125b9a5d1a585b1a5e9959606a1b6044820152606490fd5b60405162461bcd60e51b815260206004820152602160248201527f496e76616c6964206163636f756e747320636f6e7472616374206164647265736044820152607360f81b6064820152608490fd5b3461022f57606036600319011261022f577fa76c9035995eb2a8b40386ebe50cac49c18117a4b8e5b59aa8572544d6f32442608061054e610c87565b610556610c9d565b9033600052600160205261057160ff6040600020541661104f565b6040519133835260018060a01b0380921660208401521660408201526044356060820152a1005b3461022f5760a036600319011261022f576105b1610c9d565b606036604319011261022f576105c5610cfc565b604435600281101561022f57815260208101916064358352608435801515810361022f577f896c10dc6ccc075f8e39be1b3daf3ccc517cc3f97719fd4941a6b8bff2ee62c89383604060c0950192835233600052600160205261062f60ff6040600020541661104f565b6040805133815260043560208201526001600160a01b039095169085015251610657816110ea565b606084015251608083015251151560a0820152a1005b3461022f57606036600319011261022f577fe89f1144af1ff5421e4a225aef6f42611719ceaf92c6a4cf7687aa097e6ae9f160806106a9610cfc565b6004358152602081016024358152604082019060443582523360005260016020526106db60ff6040600020541661104f565b60405192338452516020840152516040830152516060820152a1005b3461022f57604036600319011261022f57610710610c87565b6001600160401b036024351161022f576101a06024353603600319011261022f576102206040526024356004013563ffffffff8116810361022f5760805261075b6024803501610cc9565b60a052602435604481013560c052606481013560e05260848101356101005260a48101356101205260c48101356101405260e481013561016052610104810135610180526001600160401b03610124909101351161022f5760243561012481013501604036829003600319011261022f576107d4610cdd565b906004810135600381101561022f5782526024810135906001600160401b03821161022f576101e08183013603600319011261022f5760405191826101608101106001600160401b036101608501111761023457610160830160405261083e600482840101610cc9565b83526024818301013560208401526001600160401b03604482840101351161022f5761087536838301604481013501600401610d81565b60408401526001600160401b03606482840101351161022f576108a336838301606481013501600401610d81565b606084015260a08282013603608319011261022f576108c0610cdd565b600360848385010135101561022f57608482840101358152608060a3198385013603011261022f576040518060808101106001600160401b03608083011117610234576080810160405261091860a484860101610d9f565b815283830160c481013560208301526109339060e401610d9f565b604082015261094761010484860101610d9f565b60608201526020820152608084015261012481830101356001600160401b03811161022f5761097e90600436918486010101610d81565b60a08401526001600160401b0361014482840101351161022f576101c4916109b23683830161014481013501600401610d81565b60c085015280820161016481013560e08601526109d29061018401610cc9565b610100850152016101a4810135610120840152013561014082015260208201526101a05260026024356101440135101561022f576024356101448101356101c052610a209061016401610cc9565b6101e052610a3360243561018401610cc9565b61020052600054610a54903360089190911c6001600160a01b03161461104f565b60018060a01b031660005260016020526040600020600160ff198254161790557fbb2778bd8d086ccffd96ed15b663a6e8047661ea87c3b237956e0c04f829b26e6040513381526040602082015263ffffffff60805116604082015260018060a01b03602060800151166060820152604060800151608082015260606080015160a0820152608080015160c082015260a06080015160e082015260c06080015161010082015260e06080015161012082015261010060800151610140820152806020610120608001516101a06101608401528051610b318161108a565b6101e08401520151604061020083015260018060a01b038151166102208301526020810151610240830152610140610c1a610b7e60408401516101e06102608701526104008601906110aa565b610c04610b9f60608601519261021f199384898303016102808a01526110aa565b602060808701518051610bb18161108a565b6102a08a0152015160606001600160801b0391828151166102c08b015260208101516102e08b0152826040820151166103008b015201511661032088015260a086015183888303016103408901526110aa565b9060c085015190868303016103608701526110aa565b60e08301516103808501526101008301516001600160a01b03166103a08501526101208301516103c08501529101516103e08301526101c051610c5c816110ea565b6101808301526101e0516001600160a01b039081166101a084015261020051166101c08301520390a1005b600435906001600160a01b038216820361022f57565b602435906001600160a01b038216820361022f57565b604435906001600160a01b038216820361022f57565b35906001600160a01b038216820361022f57565b60405190604082018281106001600160401b0382111761023457604052565b60405190606082018281106001600160401b0382111761023457604052565b6040519190601f01601f191682016001600160401b0381118382101761023457604052565b9291926001600160401b03821161023457610d64601f8301601f1916602001610d1b565b938285528282011161022f57816000926020928387013784010152565b9080601f8301121561022f57816020610d9c93359101610d40565b90565b35906001600160801b038216820361022f57565b6001600160401b0381116102345760051b60200190565b9190916101e090818185031261022f576040938451928301946001600160401b039584811087821117610234578152839583358552602091610e0d838601610cc9565b8387015280850135600581101561022f5781870152606085013560608701526080850135608087015260a085013560a087015260c085013560c087015260e085013560e08701526101008086013583811161022f5785610e6e918801610d81565b908701526101208086013583811161022f5785610e8c918801610d81565b908701526101408086013583811161022f5785610eaa918801610d81565b90870152610160928386013583811161022f5786019460608682031261022f57610ed2610cfc565b95803585811161022f57810182601f8201121561022f57803590610efd610ef883610db3565b610d1b565b91858084838152019160051b8301019185831161022f5786809101915b83831061103f575050505087528281013585811161022f57810182601f8201121561022f57803590610f4e610ef883610db3565b91858084838152019160051b8301019185831161022f5786809101915b8383106110275750915050880152838101359085821161022f57019080601f8301121561022f578135610fa0610ef882610db3565b95848088848152019260051b8501019383851161022f57858101925b858410610ff2575050505050505083015283015261018080820135908301526101a080820135908301526101c080910135910152565b833583811161022f57820185603f8201121561022f57879161101c87838c86809601359101610d40565b815201930192610fbc565b819061103284610cc9565b8152019101908690610f6b565b8235815291810191879101610f1a565b1561105657565b60405162461bcd60e51b815260206004820152600c60248201526b155b985d5d1a1bdc9a5e995960a21b6044820152606490fd5b6003111561109457565b634e487b7160e01b600052602160045260246000fd5b919082519283825260005b8481106110d6575050826000602080949584010152601f8019910116010190565b6020818301810151848301820152016110b5565b6002111561109457565b9060058210156110945752565b9091939260018060a01b0380931682526020948583015260606040830152805160608301528285820151166080830152611143604082015160a08401906110f4565b606081015160c0830152608081015160e083015260a081015190610100918284015260c081015191610120928385015260e0820151906101409182860152820151946101e090886111a161016098848a8a01526102408901906110aa565b95850151916111d96111c2605f1998610180958a8c830301878d01526110aa565b95870151956101a096898b830301888c01526110aa565b98860151906101c097898b0301888a015260608a0182519060608c5281518091528460808d0192019060005b8181106112cf5750505083808401519d8e8d828186039101525192838152019d01916000905b8282106112b6575050505060400151976040818c039101528751808b52818b019180808d8460051b01019a01926000905b838210611288575050505050610220959697985083015190860152810151610200850152015191015290565b909192939a83808f6001938f6112a792601f19908303018752516110aa565b9d01920192019093929161125c565b835181168f529d85019d9285019260019091019061122b565b825184528f96938401939092019160010161120556fea26469706673582212200c3b5c5543c1f1ffadbc6b2b8f0ca4869981424af2effd7bf1915072dcb0f9c964736f6c63430008120033";

type SubdaoEmitterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SubdaoEmitterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SubdaoEmitter__factory extends ContractFactory {
  constructor(...args: SubdaoEmitterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SubdaoEmitter> {
    return super.deploy(overrides || {}) as Promise<SubdaoEmitter>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): SubdaoEmitter {
    return super.attach(address) as SubdaoEmitter;
  }
  override connect(signer: Signer): SubdaoEmitter__factory {
    return super.connect(signer) as SubdaoEmitter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SubdaoEmitterInterface {
    return new utils.Interface(_abi) as SubdaoEmitterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SubdaoEmitter {
    return new Contract(address, _abi, signerOrProvider) as SubdaoEmitter;
  }
}
