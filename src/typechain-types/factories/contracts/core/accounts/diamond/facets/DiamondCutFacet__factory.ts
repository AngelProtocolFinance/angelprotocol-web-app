/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../../common";
import type {
  DiamondCutFacet,
  DiamondCutFacetInterface,
} from "../../../../../../contracts/core/accounts/diamond/facets/DiamondCutFacet";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "initializationcontractaddress",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "InitializationFunctionReverted",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "facetAddress",
            type: "address",
          },
          {
            internalType: "enum IDiamondCut.FacetCutAction",
            name: "action",
            type: "uint8",
          },
          {
            internalType: "bytes4[]",
            name: "functionSelectors",
            type: "bytes4[]",
          },
        ],
        indexed: false,
        internalType: "struct IDiamondCut.FacetCut[]",
        name: "diamondcut",
        type: "tuple[]",
      },
      {
        indexed: false,
        internalType: "address",
        name: "init",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "DiamondCut",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "facetAddress",
            type: "address",
          },
          {
            internalType: "enum IDiamondCut.FacetCutAction",
            name: "action",
            type: "uint8",
          },
          {
            internalType: "bytes4[]",
            name: "functionSelectors",
            type: "bytes4[]",
          },
        ],
        internalType: "struct IDiamondCut.FacetCut[]",
        name: "diamondcut",
        type: "tuple[]",
      },
      {
        internalType: "address",
        name: "init",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "diamondCut",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523461001657611160908161001c8239f35b600080fdfe608080604052600436101561001357600080fd5b60003560e01c631f931c1c1461002857600080fd5b346108535760603660031901126108535767ffffffffffffffff600435116108535736602360043501121561085357600435600401359067ffffffffffffffff8211610853573660248360051b600435010111610853576024356001600160a01b03811690036108535767ffffffffffffffff60443511610853573660236044350112156108535767ffffffffffffffff60443560040135116108535736602460443560040135604435010111610853577fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c1320546001600160a01b0316330361086e575061011c61011782610901565b6108db565b90602082828152018091602460043501915b60248260051b6004350101831061071557838561015361011760443560040135610919565b60443560048101358083529060240160208301376000602060443560040135830101526000915b80518310156105f757602061018f848361095a565b51015160038110156105e1578061030e57506001600160a01b036101b3848361095a565b5151169160406101c3858461095a565b510151916101d3835115156109c4565b6101de841515610a24565b6001600160a01b038416600090815260008051602061110b83398151915260205260409020546001600160601b0316918215610300575b6000925b84518410156102e6576001600160e01b0319610235858761095a565b511660008181526000805160206110eb83398151915260205260409020546001600160a01b031661028357816102728861027d9461027794610bed565b610a85565b93610935565b92610219565b60405162461bcd60e51b815260206004820152603560248201527f4c69624469616d6f6e644375743a2043616e2774206164642066756e6374696f6044820152746e207468617420616c72656164792065786973747360581b6064820152608490fd5b509491509492506102f891505b610935565b91909261017a565b61030985610af2565b610215565b9193916001810361048757506001600160a01b0361032c848361095a565b51511693604061033c858461095a565b5101519161034c835115156109c4565b610357861515610a24565b6001600160a01b038616600090815260008051602061110b83398151915260205260409020546001600160601b0316918215610479575b6000925b8451841015610469576001600160e01b03196103ae858761095a565b511660008181526000805160206110eb83398151915260205260409020546001600160a01b0316918983146103fe576102728a82846103f3610277966103f898610cd3565b610bed565b92610392565b60405162461bcd60e51b815260206004820152603860248201527f4c69624469616d6f6e644375743a2043616e2774207265706c6163652066756e60448201527f6374696f6e20776974682073616d652066756e6374696f6e00000000000000006064820152608490fd5b5094915094506102f89150610935565b61048287610af2565b61038e565b60020361058c576001600160a01b036104a0848361095a565b5151169360406104b0858461095a565b510151946104c0865115156109c4565b6105285760005b855181101561051b57610516906102f36001600160e01b03196104ea838a61095a565b511660008181526000805160206110eb83398151915260205260409020546001600160a01b0316610cd3565b6104c7565b50926102f8919450610935565b60405162461bcd60e51b815260206004820152603660248201527f4c69624469616d6f6e644375743a2052656d6f76652066616365742061646472604482015275657373206d757374206265206164647265737328302960501b6064820152608490fd5b60405162461bcd60e51b815260206004820152602760248201527f4c69624469616d6f6e644375743a20496e636f727265637420466163657443756044820152663a20b1ba34b7b760c91b6064820152608490fd5b634e487b7160e01b600052602160045260246000fd5b9091506040519060608201906060835251809152608082019060808160051b84010194916000905b82821061067d576024356001600160a01b03166020860152848703604086015261067b867f8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb67387806106708c85610984565b0390a1602435610fde565b005b848703607f19018152835180516001600160a01b03168852602081015194979394929391929060038210156105e1576040916020840152015190606060408201526020608060608301928451809452019201906000905b8082106106f25750505060208060019298019201920190929161061f565b82516001600160e01b0319168452602093840193909201916001909101906106d4565b67ffffffffffffffff833511610853576060600435843501360360231901126108535760405180606081011067ffffffffffffffff6060830111176108585760608101604052600435843501602401356001600160a01b038116900361085357600435843501602481013582526044013560038110156108535760208201526064843560043501013567ffffffffffffffff811161085357366043828735600435010101121561085357602481863560043501010135906107d861011783610901565b91602083828152013660448360051b858b356004350101010111610853576044838935600435010101905b60448360051b858b356004350101010182106108305750505050604082015281526020928301920161012e565b81356001600160e01b031981169003610853578135815260209182019101610803565b600080fd5b634e487b7160e01b600052604160045260246000fd5b62461bcd60e51b815260206004820152602260248201527f4c69624469616d6f6e643a204d75737420626520636f6e7472616374206f776e60448201526132b960f11b6064820152608490fd5b604051906060820182811067ffffffffffffffff82111761085857604052565b6040519190601f01601f1916820167ffffffffffffffff81118382101761085857604052565b67ffffffffffffffff81116108585760051b60200190565b67ffffffffffffffff811161085857601f01601f191660200190565b60001981146109445760010190565b634e487b7160e01b600052601160045260246000fd5b805182101561096e5760209160051b010190565b634e487b7160e01b600052603260045260246000fd5b919082519283825260005b8481106109b0575050826000602080949584010152601f8019910116010190565b60208183018101518483018201520161098f565b156109cb57565b60405162461bcd60e51b815260206004820152602b60248201527f4c69624469616d6f6e644375743a204e6f2073656c6563746f727320696e206660448201526a1858d95d081d1bc818dd5d60aa1b6064820152608490fd5b15610a2b57565b60405162461bcd60e51b815260206004820152602c60248201527f4c69624469616d6f6e644375743a204164642066616365742063616e2774206260448201526b65206164647265737328302960a01b6064820152608490fd5b6001600160601b038091169081146109445760010190565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131e805482101561096e576000527fb5c239a29faf02594141bbc5e6982a9b85ba2b4d59c3ed3baaf4cb8e5e11cbef0190600090565b610b3a610afd6108bb565b602481527f4c69624469616d6f6e644375743a204e657720666163657420686173206e6f20602082015263636f646560e01b6040820152826110bd565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131e80546001600160a01b038316600090815260008051602061110b833981519152602052604090206001018190559190600160401b8310156108585782610ba9916001610bc895019055610a9d565b90919082549060031b9160018060a01b03809116831b921b1916179055565b565b919091805483101561096e57600052601c60206000208360031c019260021b1690565b6001600160e01b0319811660008181526000805160206110eb83398151915260208190526040822080546001600160a01b031660a09690961b6001600160a01b031916959095179094559194939092906001600160a01b031680835260008051602061110b83398151915260205260408320805491949190600160401b821015610cbf5796610c898260409798996001610ca695018155610bca565b90919063ffffffff83549160031b9260e01c831b921b1916179055565b82526020522080546001600160a01b0319169091179055565b634e487b7160e01b85526041600452602485fd5b9091906001600160a01b039081168015610f7357308114610f175763ffffffff60e01b8094166000928184526000805160206110eb833981519152926020918483526040948587205460a01c9083885260008051602061110b8339815191529586865287892054926000199b8c8501948511610f0357908991888c898c89808703610e95575b505090525050508787525087892080548015610e81578c0190610d7c8282610bca565b63ffffffff82549160031b1b191690555588528452868681205515610da6575b5050505050509050565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131e8054898101908111610e6d57838852858552826001888a20015491808303610e3b575b5050508054988915610e275760019798990191610e0683610a9d565b909182549160031b1b19169055558552528220015580388080808080610d9c565b634e487b7160e01b88526031600452602488fd5b610e4490610a9d565b90549060031b1c16610e5981610ba984610a9d565b885285855260018789200155388281610dea565b634e487b7160e01b88526011600452602488fd5b634e487b7160e01b8b52603160045260248bfd5b610ef69784610c8993610eb48a9487610eca9952828a52848420610bca565b90549060031b1c60e01b97889683525220610bca565b168b52838852898b2080546001600160a01b031660a09290921b6001600160a01b031916919091179055565b873880888c898c89610d59565b634e487b7160e01b8b52601160045260248bfd5b60405162461bcd60e51b815260206004820152602e60248201527f4c69624469616d6f6e644375743a2043616e27742072656d6f766520696d6d7560448201526d3a30b1363290333ab731ba34b7b760911b6064820152608490fd5b60405162461bcd60e51b815260206004820152603760248201527f4c69624469616d6f6e644375743a2043616e27742072656d6f76652066756e6360448201527f74696f6e207468617420646f65736e27742065786973740000000000000000006064820152608490fd5b6001600160a01b038116919082156110b8576000809161103f610fff6108bb565b602781527f4c69624469616d6f6e644375743a20696e6974206164647265737320686173206020820152666e6f20636f646560c81b6040820152826110bd565b83519060208501905af4913d156110b0573d9261105e61011785610919565b9384523d6000602086013e5b1561107457505050565b82511561108357825160208401fd5b6110ac60405192839263192105d760e01b84526004840152604060248401526044830190610984565b0390fd5b60609261106a565b505050565b3b156110c65750565b60405162461bcd60e51b8152602060048201529081906110ac90602483019061098456fec8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131cc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131da26469706673582212204468fb206a65f11f573bb1e1f63c38231f3acfcfc8ca128286155b91560ee2d364736f6c63430008120033";

type DiamondCutFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DiamondCutFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DiamondCutFacet__factory extends ContractFactory {
  constructor(...args: DiamondCutFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DiamondCutFacet> {
    return super.deploy(overrides || {}) as Promise<DiamondCutFacet>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): DiamondCutFacet {
    return super.attach(address) as DiamondCutFacet;
  }
  override connect(signer: Signer): DiamondCutFacet__factory {
    return super.connect(signer) as DiamondCutFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DiamondCutFacetInterface {
    return new utils.Interface(_abi) as DiamondCutFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DiamondCutFacet {
    return new Contract(address, _abi, signerOrProvider) as DiamondCutFacet;
  }
}
