/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type {
  FunctionFragment,
  Result,
  EventFragment,
} from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
} from "../../../common";

export declare namespace CommunityMessage {
  export type InstantiateMsgStruct = {
    timelockContract: string;
    haloToken: string;
    spendLimit: BigNumberish;
  };

  export type InstantiateMsgStructOutput = [string, string, BigNumber] & {
    timelockContract: string;
    haloToken: string;
    spendLimit: BigNumber;
  };

  export type ConfigResponseStruct = {
    timelockContract: string;
    haloToken: string;
    spendLimit: BigNumberish;
  };

  export type ConfigResponseStructOutput = [string, string, BigNumber] & {
    timelockContract: string;
    haloToken: string;
    spendLimit: BigNumber;
  };
}

export interface CommunityInterface extends utils.Interface {
  functions: {
    "initialize((address,address,uint256))": FunctionFragment;
    "queryConfig()": FunctionFragment;
    "spend(address,uint256)": FunctionFragment;
    "updateConfig(uint256,address)": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "initialize"
      | "queryConfig"
      | "spend"
      | "updateConfig"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "initialize",
    values: [CommunityMessage.InstantiateMsgStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "queryConfig",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "spend",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "updateConfig",
    values: [BigNumberish, string]
  ): string;

  decodeFunctionResult(functionFragment: "initialize", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "queryConfig",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "spend", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "updateConfig",
    data: BytesLike
  ): Result;

  events: {
    "ConfigUpdated()": EventFragment;
    "HaloSpent(address,uint256)": EventFragment;
    "Initialized(uint8)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "ConfigUpdated"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "HaloSpent"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "Initialized"): EventFragment;
}

export interface ConfigUpdatedEventObject {}
export type ConfigUpdatedEvent = TypedEvent<[], ConfigUpdatedEventObject>;

export type ConfigUpdatedEventFilter = TypedEventFilter<ConfigUpdatedEvent>;

export interface HaloSpentEventObject {
  recipient: string;
  amount: BigNumber;
}
export type HaloSpentEvent = TypedEvent<
  [string, BigNumber],
  HaloSpentEventObject
>;

export type HaloSpentEventFilter = TypedEventFilter<HaloSpentEvent>;

export interface InitializedEventObject {
  version: number;
}
export type InitializedEvent = TypedEvent<[number], InitializedEventObject>;

export type InitializedEventFilter = TypedEventFilter<InitializedEvent>;

export interface Community extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: CommunityInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    initialize(
      details: CommunityMessage.InstantiateMsgStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    queryConfig(
      overrides?: CallOverrides
    ): Promise<[CommunityMessage.ConfigResponseStructOutput]>;

    spend(
      recipient: string,
      amount: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    updateConfig(
      spendLimit: BigNumberish,
      timelockContract: string,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;
  };

  initialize(
    details: CommunityMessage.InstantiateMsgStruct,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  queryConfig(
    overrides?: CallOverrides
  ): Promise<CommunityMessage.ConfigResponseStructOutput>;

  spend(
    recipient: string,
    amount: BigNumberish,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  updateConfig(
    spendLimit: BigNumberish,
    timelockContract: string,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  callStatic: {
    initialize(
      details: CommunityMessage.InstantiateMsgStruct,
      overrides?: CallOverrides
    ): Promise<void>;

    queryConfig(
      overrides?: CallOverrides
    ): Promise<CommunityMessage.ConfigResponseStructOutput>;

    spend(
      recipient: string,
      amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    updateConfig(
      spendLimit: BigNumberish,
      timelockContract: string,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {
    "ConfigUpdated()"(): ConfigUpdatedEventFilter;
    ConfigUpdated(): ConfigUpdatedEventFilter;

    "HaloSpent(address,uint256)"(
      recipient?: null,
      amount?: null
    ): HaloSpentEventFilter;
    HaloSpent(recipient?: null, amount?: null): HaloSpentEventFilter;

    "Initialized(uint8)"(version?: null): InitializedEventFilter;
    Initialized(version?: null): InitializedEventFilter;
  };

  estimateGas: {
    initialize(
      details: CommunityMessage.InstantiateMsgStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    queryConfig(overrides?: CallOverrides): Promise<BigNumber>;

    spend(
      recipient: string,
      amount: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    updateConfig(
      spendLimit: BigNumberish,
      timelockContract: string,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    initialize(
      details: CommunityMessage.InstantiateMsgStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    queryConfig(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    spend(
      recipient: string,
      amount: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    updateConfig(
      spendLimit: BigNumberish,
      timelockContract: string,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;
  };
}
