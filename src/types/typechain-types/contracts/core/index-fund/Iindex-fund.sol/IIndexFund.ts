/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type { FunctionFragment, Result } from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
  PromiseOrValue,
} from "../../../../common";

export declare namespace AngelCoreStruct {
  export type IndexFundStruct = {
    id: PromiseOrValue<BigNumberish>;
    name: PromiseOrValue<string>;
    description: PromiseOrValue<string>;
    members: PromiseOrValue<BigNumberish>[];
    splitToLiquid: PromiseOrValue<BigNumberish>;
    expiryTime: PromiseOrValue<BigNumberish>;
    expiryHeight: PromiseOrValue<BigNumberish>;
  };

  export type IndexFundStructOutput = [
    BigNumber,
    string,
    string,
    number[],
    BigNumber,
    BigNumber,
    BigNumber
  ] & {
    id: BigNumber;
    name: string;
    description: string;
    members: number[];
    splitToLiquid: BigNumber;
    expiryTime: BigNumber;
    expiryHeight: BigNumber;
  };
}

export interface IIndexFundInterface extends utils.Interface {
  functions: {
    "queryFundDetails(uint256)": FunctionFragment;
    "queryInvolvedFunds(uint256)": FunctionFragment;
    "removeMember(uint256)": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "queryFundDetails"
      | "queryInvolvedFunds"
      | "removeMember"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "queryFundDetails",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "queryInvolvedFunds",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "removeMember",
    values: [PromiseOrValue<BigNumberish>]
  ): string;

  decodeFunctionResult(
    functionFragment: "queryFundDetails",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "queryInvolvedFunds",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "removeMember",
    data: BytesLike
  ): Result;

  events: {};
}

export interface IIndexFund extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: IIndexFundInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    queryFundDetails(
      fundId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[AngelCoreStruct.IndexFundStructOutput]>;

    queryInvolvedFunds(
      endowmentId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[AngelCoreStruct.IndexFundStructOutput[]]>;

    removeMember(
      member: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[boolean]>;
  };

  queryFundDetails(
    fundId: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<AngelCoreStruct.IndexFundStructOutput>;

  queryInvolvedFunds(
    endowmentId: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<AngelCoreStruct.IndexFundStructOutput[]>;

  removeMember(
    member: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<boolean>;

  callStatic: {
    queryFundDetails(
      fundId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<AngelCoreStruct.IndexFundStructOutput>;

    queryInvolvedFunds(
      endowmentId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<AngelCoreStruct.IndexFundStructOutput[]>;

    removeMember(
      member: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<boolean>;
  };

  filters: {};

  estimateGas: {
    queryFundDetails(
      fundId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    queryInvolvedFunds(
      endowmentId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    removeMember(
      member: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    queryFundDetails(
      fundId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    queryInvolvedFunds(
      endowmentId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    removeMember(
      member: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
