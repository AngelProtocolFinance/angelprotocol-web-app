/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  Distributor,
  DistributorInterface,
} from "../../../../contracts/halo/distributor/Distributor";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "distributor",
        type: "address",
      },
    ],
    name: "DistributorAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "timelockContract",
            type: "address",
          },
          {
            internalType: "address",
            name: "haloToken",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "allowlist",
            type: "address[]",
          },
          {
            internalType: "uint256",
            name: "spendLimit",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct DistributorStorage.Config",
        name: "config",
        type: "tuple",
      },
    ],
    name: "DistributorConfigUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "distributor",
        type: "address",
      },
    ],
    name: "DistributorRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "DistributorSpend",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "distributor",
        type: "address",
      },
    ],
    name: "addDistributor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "timelockContract",
            type: "address",
          },
          {
            internalType: "address",
            name: "haloToken",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "allowlist",
            type: "address[]",
          },
          {
            internalType: "uint256",
            name: "spendLimit",
            type: "uint256",
          },
        ],
        internalType: "struct DistributorMessage.InstantiateMsg",
        name: "details",
        type: "tuple",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "queryConfig",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "timelockContract",
            type: "address",
          },
          {
            internalType: "address",
            name: "haloToken",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "allowlist",
            type: "address[]",
          },
          {
            internalType: "uint256",
            name: "spendLimit",
            type: "uint256",
          },
        ],
        internalType: "struct DistributorMessage.ConfigResponse",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "distributor",
        type: "address",
      },
    ],
    name: "removeDistributor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "spend",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "spendLimit",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "timelockContract",
        type: "address",
      },
    ],
    name: "updateConfig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523461001b576001600555610cdc90816100218239f35b600080fdfe6040608081526004908136101561001557600080fd5b600091823560e01c90816307a582d8146109b557816357c1f9e21461072e5781637250e2241461063b5781637fdef99b14610304578163af7d6ca314610147575063e68f909d1461006557600080fd5b3461014357816003193601126101435780519161008183610a64565b80835280606060209482868201528185820152015260018060a01b039081815416906003549160019584875416958051926100bb84610a64565b83528183019687528051906100da826100d381610ab8565b0383610a96565b8084019182526060840195865286815198848a528160a08b01965116858b015251169088015251946080606088015285518093528160c08801960193905b83821061012c578551608089015287870388f35b845181168752958201959382019390880190610118565b5080fd5b83915034610143578260031936011261014357610162610a35565b6024359161016e610b84565b610198610191865161018a8161018381610ab8565b0382610a96565b3390610c3a565b9050610b49565b82600354106102b657600154855163a9059cbb60e01b81526001600160a01b03848116848301908152602081810188905292938492169082908990829060400103925af19081156102ac57859161026e575b5015610239575092516001600160a01b0390931683526020830152907fca7f6eda9cf4c1209102c94299b47792caaf948d83dcbbc0856df43e47992b1a9080604081015b0390a1600160055580f35b606490602086519162461bcd60e51b8352820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b6044820152fd5b90506020813d82116102a4575b8161028860209383610a96565b810103126102a0575180151581036102a057866101ea565b8480fd5b3d915061027b565b86513d87823e3d90fd5b608490602086519162461bcd60e51b8352820152602260248201527f43616e6e6f74207370656e64206d6f7265207468616e207370656e64206c696d6044820152611a5d60f21b6064820152fd5b91905034610637576020906003199082823601126102a057833567ffffffffffffffff9283821161063357608090823603011261062f57815161034681610a64565b610351828701610a50565b8152602493610361858401610a50565b91868101928352604484013582811161062b578401933660238601121561062b578885013594838611610619578560051b8751966103a18b830189610a96565b8752888a8801918301019136831161061557898b9101915b8383106105fd5750505050858201948552606460608301910135815288549660ff8860081c1615958680976105f0575b80156105d9575b1561058057600198878a60ff198316178d5561056f575b508b60018060a01b038080965116925194519751169160608c848c519161042d83610a64565b848352820152868c820152019788526bffffffffffffffffffffffff60a01b80925416178d55895416178855815193841161055e57600160401b841161055e575087906002548460025580851061052b575b50019060028a52868a5b848110610509575050505050516003557f78534274a26293e260ae5312c7573855f17de453a947ba2317ea7b7f55b3baad8251806104c681610b0c565b0390a16104d1578480f35b7f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989361ff0019815416905551908152a1388080808480f35b898385511694019381600080516020610c878339815191520155018790610489565b8885600080516020610c8783398151915292830192015b82811061055057505061047f565b8d81558b94508a9101610542565b634e487b7160e01b8b5260418a528afd5b61ffff1916610101178b5538610407565b875162461bcd60e51b8152808c018b9052602e818401527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608490fd5b50303b1580156103f05750600160ff8a16146103f0565b50600160ff8a16106103e9565b819061060884610a50565b8152019101908a906103b9565b8c80fd5b634e487b7160e01b8b5260418a52878bfd5b8980fd5b8580fd5b8680fd5b8280fd5b83833461014357602036600319011261014357610656610a35565b9061065f610b84565b82546001600160a01b0391906106789083163314610b49565b61069083825161068b8161018381610ab8565b610c3a565b9050156106a1575b83600160055580f35b600254600160401b81101561071b577fddbf200aa634dc3fb81cfd68583dd1040d1c751d335e1d86b631bde3e977fea89495509061070c846106ed846001602098979601600255610bda565b90919082549060031b9160018060a01b03809116831b921b1916179055565b5191168152a180828080610698565b634e487b7160e01b855260418652602485fd5b91905034610637576020806003193601126109b15761074b610a35565b91610754610b84565b84546001600160a01b03929061076d9084163314610b49565b61078084835161068b8161018381610ab8565b949094610791575b86600160055580f35b6002969394959695865481101561096e575b8654600019810190811161080e57811015610821576001810180821161080e57906108046107d361080993610bda565b9054896107df85610bda565b92909360031b1c169082549060031b9160018060a01b03809116831b921b1916179055565b610c15565b6107a3565b634e487b7160e01b865260118952602486fd5b50929495909391958054801561095b5760001981019061084082610bda565b8682549160031b1b191690558183558851916108668361085f81610ab8565b0384610a96565b82519467ffffffffffffffff861161094857600160401b861161094857509087929185855585106108f9575b5001908652855b8281106108d7575050507f126174f6cf49c81cdb4a9214c6b8f037bef55b4ec31e4fc776cea2a1c8a88d5993945191168152a1388080808080610788565b81518416600080516020610c8783398151915282015590850190600101610899565b7f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5acd0184600080516020610c87833981519152015b81811061093a5750610892565b89815588935060010161092d565b634e487b7160e01b8a5260419052602489fd5b634e487b7160e01b875260318352602487fd5b835162461bcd60e51b8152808901849052601960248201527f4572726f7220696e2072656d6f76653a20696e7465726e616c000000000000006044820152606490fd5b8380fd5b919050346106375780600319360112610637576001600160a01b0391602435838116908190036102a0577f78534274a26293e260ae5312c7573855f17de453a947ba2317ea7b7f55b3baad93610a09610b84565b610a198654913390831614610b49565b6001600160a01b03191617845535600355518061022e81610b0c565b600435906001600160a01b0382168203610a4b57565b600080fd5b35906001600160a01b0382168203610a4b57565b6080810190811067ffffffffffffffff821117610a8057604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff821117610a8057604052565b600254908181526020809101916002600052600080516020610c87833981519152916000905b828210610aec575050505090565b83546001600160a01b031685529384019360019384019390910190610ade565b6020815260018060a01b038060005416602083015260015416604082015260806060820152610b3d60a08201610ab8565b90608060035491015290565b15610b5057565b60405162461bcd60e51b815260206004820152600c60248201526b155b985d5d1a1bdc9a5e995960a21b6044820152606490fd5b600260055414610b95576002600555565b60405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b600254811015610bff576002600052600080516020610c878339815191520190600090565b634e487b7160e01b600052603260045260246000fd5b6000198114610c245760010190565b634e487b7160e01b600052601160045260246000fd5b9060005b8251811015610c7b57600581901b8301602001516001600160a01b03838116911614610c7257610c6d90610c15565b610c3e565b91505090600190565b50505060009060009056fe405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5acea26469706673582212201d665f81bde57e4f510d9b1385385046c5012cb2335b43b6c7ce0ad96728d67a64736f6c63430008120033";

type DistributorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DistributorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Distributor__factory extends ContractFactory {
  constructor(...args: DistributorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Distributor> {
    return super.deploy(overrides || {}) as Promise<Distributor>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Distributor {
    return super.attach(address) as Distributor;
  }
  override connect(signer: Signer): Distributor__factory {
    return super.connect(signer) as Distributor__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DistributorInterface {
    return new utils.Interface(_abi) as DistributorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Distributor {
    return new Contract(address, _abi, signerOrProvider) as Distributor;
  }
}
