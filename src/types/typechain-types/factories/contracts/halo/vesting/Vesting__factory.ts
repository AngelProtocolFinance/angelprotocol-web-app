/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  Vesting,
  VestingInterface,
} from "../../../../contracts/halo/vesting/Vesting";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "VestingDeposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "vestingDuration",
        type: "uint256",
      },
    ],
    name: "VestingDurationModified",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "haloToken",
        type: "address",
      },
    ],
    name: "VestingInitialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "vestingId",
        type: "uint256",
      },
    ],
    name: "VestingWithdraw",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "haloToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "haloToken",
            type: "address",
          },
        ],
        internalType: "struct VestingMessage.InstantiateMsg",
        name: "details",
        type: "tuple",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "vestingduration",
        type: "uint256",
      },
    ],
    name: "modifyVestingDuration",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalVested",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "vesting",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "claimed",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "vestingDuration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "vestingNumber",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "vestingId",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523461006b5760008054336001600160a01b0319821681178355916001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a3600180556276a7006006556064600755610ac790816100718239f35b600080fdfe6080604081815260048036101561001557600080fd5b600092833560e01c908163143ee5b9146108c6575080631514617e146108a7578063199cbc54146108885780632e1a7d4d146105b35780632e8ddde61461058a57806346449c0a14610552578063715018a6146104f55780638da5cb5b146104cd5780638f09926d146103e7578063b6b55f25146101b9578063ba90f7f71461016c5763f2fde38b146100a757600080fd5b34610168576020366003190112610168576100c0610925565b906100c9610978565b6001600160a01b0391821692831561011657505082546001600160a01b0319811683178455167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b8280fd5b5034610168576020366003190112610168577fb7b5a40b70a653aaf2764d30cccd2772fa4fe6392aaea039690e58a6af7c07889160209135906101ad610978565b8160065551908152a180f35b509190346103e35760209081600319360112610168578335916101da610a0b565b82156103a15760025482516323b872dd60e01b81523387820152306024820152604481018590529082908290606490829089906001600160a01b03165af190811561039757859161036a575b501561033257610238600654426109e8565b8251906080820182811067ffffffffffffffff82111761031f5760059392916003918652868352838301904282528684019081526060840191898352338a528a8652878a20878752888b20548b528652878a209451855551600185015551600284015551910155338552528083208054906001820180921161030c57917f57d6cdb9093e3db9f8222703cbbd3f6d73f088a6e58ce922e2f9423aae7c1daa939161030293556102e9826003546109e8565b6003555133815260208101919091529081906040820190565b0390a16001805580f35b634e487b7160e01b855260118652602485fd5b634e487b7160e01b875260418852602487fd5b8490606492519162461bcd60e51b83528201526013602482015272151c985b9cd9995c919c9bdb4819985a5b1959606a1b6044820152fd5b61038a9150823d8411610390575b6103828183610940565b8101906109d0565b38610226565b503d610378565b83513d87823e3d90fd5b8490606492519162461bcd60e51b8352820152601d60248201527f416d6f756e74206d7573742062652067726561746572207468616e20300000006044820152fd5b5080fd5b509034610168576020366003190112610168578051916020830183811067ffffffffffffffff8211176104ba57825261041e610925565b8352600254926001600160a01b03918285166104815750917f69eb108008e037ecc9a4cdc3d3b1d62557945be21b836ce3565920f2128a348b9391602093511680926bffffffffffffffffffffffff60a01b16176002558460035551908152a180f35b606490602085519162461bcd60e51b83528201526013602482015272105b1c9958591e481a5b9a5d1a585b1a5e9959606a1b6044820152fd5b634e487b7160e01b855260418252602485fd5b5050346103e357816003193601126103e357905490516001600160a01b039091168152602090f35b833461054f578060031936011261054f5761050e610978565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b5050346103e35760203660031901126103e35760209181906001600160a01b0361057a610925565b1681526005845220549051908152f35b5050346103e357816003193601126103e35760025490516001600160a01b039091168152602090f35b50346101685760209182600319360112610884578135916105d2610a0b565b338552808452818520838652845260038083872001543387528286528387208588528652838720541461084557338652818552828620848752855261065e61063e6106236002868a20015442610a81565b338952848852858920878a5288526001868a20015490610a61565b338852838752848820868952875261065981868a2054610a6e565b610a6e565b61066a60065480610a6e565b90811561083257049133875280865283872085885286528184882001548311156107ef5786866106e560018060a01b036002541633845284835287842089855283526106bb86898620015488610a61565b885163a9059cbb60e01b815233878201908152602081019290925294859384928391604090910190565b03925af19081156107e55788916107c8575b501561079357606094927fcc2338396f9e3e56af6690c5351a7b1eede0fcdfa7fde6bce2c411f700275fc996949261077f92338a52808752848a20868b52875261075061074983878d20015485610a61565b8354610a61565b8255338a52808752848a20868b5287528282868c200155338a528652838920858a528652838920015490610a61565b815193338552840152820152a16001805580f35b835162461bcd60e51b8152908101869052600f60248201526e151c985b9cd9995c8819985a5b1959608a1b6044820152606490fd5b6107df9150873d8911610390576103828183610940565b386106f7565b85513d8a823e3d90fd5b61082e90845191829162461bcd60e51b8352820160609060208152601060208201526f4e6f7468696e6720746f20636c61696d60801b60408201520190565b0390fd5b634e487b7160e01b885260128452602488fd5b5061082e915191829162461bcd60e51b8352820160609060208152601060208201526f4e6f7468696e6720746f20636c61696d60801b60408201520190565b8380fd5b5050346103e357816003193601126103e3576020906003549051908152f35b5050346103e357816003193601126103e3576020906006549051908152f35b929190503461088457816003193601126108845760809382916001600160a01b036108ef610925565b16825260205281812060243582526020522080549160018201546003600284015493015493855260208501528301526060820152f35b600435906001600160a01b038216820361093b57565b600080fd5b90601f8019910116810190811067ffffffffffffffff82111761096257604052565b634e487b7160e01b600052604160045260246000fd5b6000546001600160a01b0316330361098c57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b9081602091031261093b5751801515810361093b5790565b919082018092116109f557565b634e487b7160e01b600052601160045260246000fd5b600260015414610a1c576002600155565b60405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b919082039182116109f557565b818102929181159184041417156109f557565b818110610a8c575090565b90509056fea2646970667358221220b6396aa336c7e97b9938bb832d06fed0ada12b453350678e30dffc18e06d408064736f6c63430008120033";

type VestingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VestingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Vesting__factory extends ContractFactory {
  constructor(...args: VestingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Vesting> {
    return super.deploy(overrides || {}) as Promise<Vesting>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Vesting {
    return super.attach(address) as Vesting;
  }
  override connect(signer: Signer): Vesting__factory {
    return super.connect(signer) as Vesting__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VestingInterface {
    return new utils.Interface(_abi) as VestingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Vesting {
    return new Contract(address, _abi, signerOrProvider) as Vesting;
  }
}
