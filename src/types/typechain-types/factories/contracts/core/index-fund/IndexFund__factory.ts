/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  IndexFund,
  IndexFundInterface,
} from "../../../../contracts/core/index-fund/IndexFund";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "address",
            name: "registrarContract",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fundRotation",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "fundMemberLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "fundingGoal",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct IndexFundStorage.Config",
        name: "config",
        type: "tuple",
      },
    ],
    name: "ConfigUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "uint32[]",
            name: "member_ids",
            type: "uint32[]",
          },
          {
            internalType: "uint256[]",
            name: "locked_donation_amount",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "liquid_donation_amount",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "lockedSplit",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "liquidSplit",
            type: "uint256[]",
          },
        ],
        indexed: false,
        internalType: "struct IndexFundStorage.DonationMessages",
        name: "messages",
        type: "tuple",
      },
    ],
    name: "DonationMessagesUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "uint32[]",
            name: "members",
            type: "uint32[]",
          },
          {
            internalType: "uint256",
            name: "splitToLiquid",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expiryTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expiryHeight",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct AngelCoreStruct.IndexFund",
        name: "fund",
        type: "tuple",
      },
    ],
    name: "IndexFundCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "IndexFundRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "fundId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "memberId",
        type: "uint32",
      },
    ],
    name: "MemberAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "fundId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "memberId",
        type: "uint32",
      },
    ],
    name: "MemberRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "newRegistrar",
        type: "address",
      },
    ],
    name: "RegistrarUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "fundId",
        type: "uint256",
      },
    ],
    name: "UpdateActiveFund",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "totalFunds",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "activeFund",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "roundDonations",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "nextRotationBlock",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "nextFundId",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct IndexFundStorage._State",
        name: "state",
        type: "tuple",
      },
    ],
    name: "UpdateIndexFundState",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "uint32[]",
        name: "members",
        type: "uint32[]",
      },
      {
        internalType: "bool",
        name: "rotatingFund",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "splitToLiquid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expiryTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expiryHeight",
        type: "uint256",
      },
    ],
    name: "createIndexFund",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "senderAddr",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "fundId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "split",
            type: "uint256",
          },
        ],
        internalType: "struct IndexFundMessage.DepositMsg",
        name: "details",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "enum AngelCoreStruct.AssetInfoBase",
            name: "info",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
        ],
        internalType: "struct AngelCoreStruct.AssetBase",
        name: "fund",
        type: "tuple",
      },
    ],
    name: "depositERC20",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "registrarContract",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fundRotation",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "fundMemberLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "fundingGoal",
            type: "uint256",
          },
        ],
        internalType: "struct IndexFundMessage.InstantiateMessage",
        name: "details",
        type: "tuple",
      },
    ],
    name: "initIndexFund",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "queryActiveFundDetails",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "uint32[]",
            name: "members",
            type: "uint32[]",
          },
          {
            internalType: "uint256",
            name: "splitToLiquid",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expiryTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expiryHeight",
            type: "uint256",
          },
        ],
        internalType: "struct AngelCoreStruct.IndexFund",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "queryConfig",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "address",
            name: "registrarContract",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fundRotation",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "fundMemberLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "fundingGoal",
            type: "uint256",
          },
        ],
        internalType: "struct IndexFundStorage.Config",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "fundId",
        type: "uint256",
      },
    ],
    name: "queryFundDetails",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "uint32[]",
            name: "members",
            type: "uint32[]",
          },
          {
            internalType: "uint256",
            name: "splitToLiquid",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expiryTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expiryHeight",
            type: "uint256",
          },
        ],
        internalType: "struct AngelCoreStruct.IndexFund",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "endowmentId",
        type: "uint32",
      },
    ],
    name: "queryInvolvedFunds",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "uint32[]",
            name: "members",
            type: "uint32[]",
          },
          {
            internalType: "uint256",
            name: "splitToLiquid",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expiryTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expiryHeight",
            type: "uint256",
          },
        ],
        internalType: "struct AngelCoreStruct.IndexFund[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "queryState",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "totalFunds",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "activeFund",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "roundDonations",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "nextRotationBlock",
            type: "uint256",
          },
        ],
        internalType: "struct IndexFundMessage.StateResponseMessage",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "fundId",
        type: "uint256",
      },
    ],
    name: "removeIndexFund",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "member",
        type: "uint32",
      },
    ],
    name: "removeMember",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "fundRotation",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "fundMemberLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "fundingGoal",
            type: "uint256",
          },
        ],
        internalType: "struct IndexFundMessage.UpdateConfigMessage",
        name: "details",
        type: "tuple",
      },
    ],
    name: "updateConfig",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "fundId",
        type: "uint256",
      },
      {
        internalType: "uint32[]",
        name: "members",
        type: "uint32[]",
      },
    ],
    name: "updateFundMembers",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "updateOwner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newRegistrar",
        type: "address",
      },
    ],
    name: "updateRegistrar",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523461001b57600160125561395290816100218239f35b600080fdfe6080604052600436101561001257600080fd5b60003560e01c806335fc44d3146124795780633d6c7ef414611e71578063592b700a14611dd2578063608ce43314611cc45780637863891e146119a7578063873e9e1914611929578063880cdc311461186657806393a9d3cd14611624578063940d203c14611533578063b4d09085146114e6578063cc2e909914611238578063d8e2bba114610d28578063e68f909d14610c845763eac4f623146100b657600080fd5b34610c2f57600319608036820112610c2f576100d0612709565b906040366023190112610c2f5760405190604082018281106001600160401b038211176106dc57604052602435825260443560208301526001600160401b0360643511610c2f5760809060643536030112610c2f5760405191610132836125bb565b606435600401356003811015610c2f57835260643560248101356020850152604401356001600160a01b0381168103610c2f5760408401526001600160401b0360648035013511610c2f57610193366004606480350135606435010161262d565b60608401526101a0612770565b82516003811015610c3457610c4a5782516003811015610c3457610c2f5760015460408481015190516302b05ecb60e11b81526001600160a01b0391821660048201529160209183916024918391165afa9081156108ce57600091610c10575b5015610bd657602083015115610b9b57602083015191600254610b3d575b60015460405163e68f909d60e01b815293906103e090859060049082906001600160a01b03165afa9384156108ce57600094610b0a575b5081511561097057508051600052600a6020526003604060002001541561093e57806102ff9151600052600a6020526102a66102a06040600020429061029b4391612e82565b613655565b15612f4d565b6102cd6101a08501518251600052600a602052600460406000200154602084015191613583565b90516000526003604060002001906102f36102fa602088015193604051928380926129bd565b03826125f1565b612ff1565b60408381015160208581015192516323b872dd60e01b81526001600160a01b0394851660048201523060248201526044810193909352919283916064918391600091165af19081156108ce5760009161091f575b50156108da576040828101519181018051602080860151935163095ea7b360e01b81526001600160a01b0392831660048201526024810194909452919383916044918391600091165af19081156108ce5760009161089f575b501561085a5751604090910151600d546001600160a01b03918216929091166103d482612674565b906103e260405192836125f1565b828252601f1992836103f382612674565b0136602085013761040381612674565b9461041160405196876125f1565b8186528461041e83612674565b0136602088013761042e82612674565b9461043c60405196876125f1565b82865261044883612674565b0160005b818110610847575050600060105493601154600e5491600f54935b8681106106f2578a8a61049661048f6001600160a01b036104878e612894565b511693612894565b5191612894565b51906040519160408301908382106001600160401b038311176106dc57610520946000938493604052601d86527f63616c6c20726576657274656420776974686f7574206d6573736167650000006020870152602083519301915af13d156106d4573d9061050382612612565b9161051160405193846125f1565b82523d6000602084013e61381c565b50600d546000600d558061069c575b50600e546000600e558061066a575b50600f546000600f5580610638575b50601054600060105580610606575b506011546000601155806105d4575b7f654adb5cbaa52baea9293330b42459de9dc9b3046fced4e5dc39dcd396571f6b604051806105c1819060a082019160055481526006546020820152600754604082015260085460608201526080600954910152565b0390a16001601255602060405160018152f35b601160005260008051602061389d833981519152908101905b8181106105fa575061056b565b600081556001016105ed565b60106000526000805160206138dd833981519152908101905b81811061062c575061055c565b6000815560010161061f565b600f6000526000805160206138fd833981519152908101905b81811061065e575061054d565b60008155600101610651565b600e60005260008051602061387d833981519152908101905b818110610690575061053e565b60008155600101610683565b600d60005260076000805160206138bd833981519152910160031c8101905b8181106106c8575061052f565b600081556001016106bb565b60609061381c565b634e487b7160e01b600052604160045260246000fd5b816106fd828b6128a1565b52600061070a828d6128a1565b528060031c6000805160206138bd8339815191520154908881101561083157806000805160206138dd8339815191520154848210156108315760116000528160008051602061389d83398151915201549063ffffffff6040519461076d866125a0565b60e08560051b161c1684526020840152604083015284811015610831578060008051602061387d83398151915201549186821015610831576107c961082c93600f600052836000805160206138fd83398151915201549061271f565b604080519263665a62f360e01b602085015263ffffffff8151166024850152602081015160448501520151606483015288608483015260a49081830152815261081181612585565b61081b828d6128a1565b52610826818c6128a1565b50612eff565b610467565b634e487b7160e01b600052603260045260246000fd5b606060208289018101919091520161044c565b60405162461bcd60e51b815260206004820152601760248201527f4661696c656420746f20617070726f76652066756e64730000000000000000006044820152606490fd5b6108c1915060203d6020116108c7575b6108b981836125f1565b810190612f88565b386103ac565b503d6108af565b6040513d6000823e3d90fd5b60405162461bcd60e51b815260206004820152601860248201527f4661696c656420746f207472616e736665722066756e647300000000000000006044820152606490fd5b610938915060203d6020116108c7576108b981836125f1565b38610353565b60405162461bcd60e51b815260206004820152600a602482015269115b5c1d1e48119d5b9960b21b6044820152606490fd5b60045490919015610a7e5790805b6109895750506102ff565b610a5f90600690610a5a82549283600052600a90816020526109b46003604060002001541515612f0e565b84600052816020526109d16102a0424361029b6040600020612e82565b600454906007856109e482548095612bab565b93848210610a6557505060008051602061385d83398151915291600060209255610a1042438354613698565b809155604051908152a19384915b6101a08a01519160005260205260036102fa610a49604060002093600485015460208c015191613583565b926102f360405180948193016129bd565b612bab565b8061097e565b90919350610a73925061271f565b905582938491610a1e565b610b059150610aea60065480600052600a602052610aa56003604060002001541515612f0e565b80600052600a602052610ac56102a06040600020429061029b4391612e82565b6101a086015190600052600a6020526040600020926020600485015491015191613583565b60036102fa6020880151936102f360405180948193016129bd565b6102ff565b610b2f9194506103e03d6103e011610b36575b610b2781836125f1565b810190612c15565b9238610255565b503d610b1d565b600854431061021e5760008051602061385d8339815191526020610b6660065442904390613698565b80600655604051908152a160006007555b600854804310610b9557600254610b8d9161271f565b600855610b77565b5061021e565b60405162461bcd60e51b81526020600482015260136024820152721a5b9d985b1a5908199d5b9908185b5bdd5b9d606a1b6044820152606490fd5b60405162461bcd60e51b81526020600482015260126024820152712737ba1030b1b1b2b83a32b2103a37b5b2b760711b6044820152606490fd5b610c29915060203d6020116108c7576108b981836125f1565b38610200565b600080fd5b634e487b7160e01b600052602160045260246000fd5b60405162461bcd60e51b8152602060048201526012602482015271496e76616c6964206173736574207479706560701b6044820152606490fd5b34610c2f576000366003190112610c2f5760006080604051610ca5816125d6565b828152826020820152826040820152826060820152015260a0604051610cca816125d6565b600180831b039081600054169182825280600154169060208301918252600254906040840191825260035492606085019384526080600454950194855260405195865251166020850152516040840152516060830152516080820152f35b34610c2f576020366003190112610c2f57610d4161268b565b610d49612770565b60015460405163e68f909d60e01b81526001600160a01b03916103e0919082908290600490829087165afa9081156108ce5760409260009261121b575b5050019080825116156111d757610da09151163314612b47565b60005b63ffffffff8216600052600b6020526040600020805463ffffffff8316101561118b5781610dd0916128ec565b90546003918181841b1c600052600a9081602052610e06866102f3610e0187604060002001604051928380926129bd565b6137d5565b929092610e21575b5050505050610e1c90612e6d565b610da3565b8382869893959794961b1c6000526020528560406000200193845463ffffffff82161015611142575b84546000198101908111610ec35763ffffffff821690811015610ed9576001019063ffffffff8211610ec35763ffffffff610e88610ebe9388612fce565b9054908a1b1c16610eb7610e9c8389612fce565b819391549060031b9163ffffffff809116831b921b19161790565b9055612e6d565b610e4a565b634e487b7160e01b600052601160045260246000fd5b5050949293919093805490811561112c57610ef8600019830182612fce565b63ffffffff825491881b1b19169055600019820181556040519160208360001983018152019160005260206000206000905b600019830160078301106110be5793807f500978d9e5f72b20b6a716a3d6efff3c09afb83b78ac2ad0f933c747827644cd979460409794610fd394610e1c9c9b985491600019810182106110a5575b6000198101821061108a575b6000198101821061106f575b60001981018210611053575b60001981018210611037575b6000198101821061101b575b60001981018210610fff575b6000190111610ff1575b5003906125f1565b8351921b1c815263ffffffff86166020820152a19083808080610e0e565b60e01c81526020018c610fcb565b9092602060019163ffffffff8560c01c16815201930190610fc1565b9092602060019163ffffffff8560a01c16815201930190610fb5565b9092602060019163ffffffff8560801c16815201930190610fa9565b9092602060019163ffffffff8560601c16815201930190610f9d565b9092602060019163ffffffff858e1c16815201930190610f91565b9092602060019163ffffffff85831c16815201930190610f85565b9092602060019163ffffffff8516815201930190610f79565b805463ffffffff8082168652602082811c821690870152604082811c821690870152606082811c821690870152608082811c82169087015260a082811c82169087015260c082811c9091169086015260e090811c908501526101009093019260089190910190600101610f2a565b634e487b7160e01b600052603160045260246000fd5b60405162461bcd60e51b815260206004820152601960248201527f4572726f7220696e2072656d6f76653a20696e7465726e616c000000000000006044820152606490fd5b0390fd5b63ffffffff8316600052600b6020526040600020805460008255806111bb575b6001601255602060405160018152f35b6111d091600052602060002090810190612800565b80806111ab565b606460405162461bcd60e51b815260206004820152602060248201527f6163636f756e747320636f6e7472616374206e6f7420636f6e666967757265646044820152fd5b6112319250803d10610b3657610b2781836125f1565b8480610d86565b34610c2f576040366003190112610c2f576004356001600160401b03602435818111610c2f5761126c90369060040161269e565b91611275612770565b61128a60018060a01b03600054163314612b47565b825160035411156114a15780600052602091600a83526112b46040600020429061029b4391612e82565b6114675781600052600a835260036040600020019084519081116106dc576112dc818361282a565b83850191600052836000208160031c9160005b838110611424575060071981169003806113d0575b5050505060005b83518110156113c15763ffffffff8061132483876128a1565b5116600052600b9081855260406000206040519081878254918281520191600052876000209060005b8181106113ad57505050858261136e611382979695946113739403826125f1565b613795565b905015611387575b5050612eff565b61130b565b61139183886128a1565b511660005284526113a6836040600020612904565b858061137b565b82548452928901926001928301920161134d565b82600160125560405160018152f35b9260009360005b878282106113ee5750505050015583808080611304565b61141a849763ffffffff60019495965116908560021b60031b9163ffffffff809116831b921b19161790565b96019291016113d7565b6000805b886008821061143f575050838201556001016112ef565b875191979260019263ffffffff60058b901b81811b19909316911690911b1792019601611428565b60405162461bcd60e51b8152600481018490526012602482015271125b99195e08119d5b9908115e1c1a5c995960721b6044820152606490fd5b60405162461bcd60e51b815260206004820152601a60248201527f46756e64206d656d626572206c696d69742065786365656465640000000000006044820152606490fd5b34610c2f576000366003190112610c2f576114ff6135cc565b50600654600052600a60205261152f61151b6040600020612e82565b6040519182916020835260208301906124ee565b0390f35b34610c2f57602080600319360112610c2f5763ffffffff61155261268b565b1680600052600b80835261156a604060002054613605565b9060005b83600052818552604060002080548210156115c65790611591816115c1936128ec565b90549060031b1c600052600a86526115ac6040600020612e82565b6115b682866128a1565b5261082681856128a1565b61156e565b604080518781528551818901819052600092600582901b8301810191888b01918b9085015b8287106115f85785850386f35b909192938280611614600193603f198a820301865288516124ee565b96019201960195929190926115eb565b34610c2f57602080600319360112610c2f57600435611641612770565b61165760018060a01b0360005416331415612b47565b80600052600a8252806006541461183b575b61167d8160405161136e816102f381612b4e565b611737575b506005546000198101908111610ec3577fb1a52d9fa203ad04e22da5c0c85bef32136b120839efb2ea6c7b7991bc80191e91839160055580600052600a825260006006604082208281556116d860018201612bb8565b6116e460028201612bb8565b60038101805484825580611718575b50508260048201558260058201550155604051908152a1600160125560405160018152f35b6117309185526007878620910160031c810190612800565b87806116f3565b9190600c928354811015611142575b83546000198101908111610ec3578110156117a9576001810190818111610ec35761179f6117766117a4936128b5565b9054611781846128b5565b91909260031b1c9082549060031b91821b91600019901b1916179055565b612eff565b611746565b509091805490811561112c57600019918201916117c5836128b5565b909182549160031b1b1916905581815560405191848382815201916000527fdf6966c971051c3d54ec59162606531493a51404a002842f56009d7e5cf4a8c79060005b86828210611827575050505090806118219203906125f1565b82611682565b835485529093019260019283019201611808565b60008051602061385d83398151915282611856424385613698565b80600655604051908152a1611669565b34610c2f576020366003190112610c2f5761187f612709565b611887612770565b6000546001600160a01b03919082811633036118f5577f4ffd725fc4a22075e9ec71c59edf9c38cdeb588a91b24fc5b61388c5be41282b926020921680916118d082151561272c565b6001600160a01b03191617600055604051908152a16001601255602060405160018152f35b60405162461bcd60e51b815260206004820152600c60248201526b155b985d5d1a1bdc9a5e995960a21b6044820152606490fd5b34610c2f576000366003190112610c2f576000606060405161194a816125bb565b82815282602082015282604082015201526080600554600654600754600854916060604051611978816125bb565b858152602081019283526040810193845201928352604051938452516020840152516040830152516060820152f35b34610c2f576080366003190112610c2f576040516119c4816125bb565b6119cc612709565b815260208082016024358152604083016044358152606084019160643583526013549260ff8460081c161593848095611cb7575b8015611ca0575b15611c445760ff19811660011760135584611c32575b5085516001600160a01b039690871615611bed57611b17949596611aa491601e601455600a601555511692519351915192836080604051611a5d816125d6565b338152838b8201528760408201528560608201520152336001600160601b0360a01b600054161760005560018060a01b03166001600160601b0360a01b6001541617600155565b826002556003556004557fd41a848f4338796659fc6f85bedcd07fe9eee900c21349ea011e3d275293016260405180611b0e819060a082019160018060a01b0380600054168252600154166020820152600254604082015260035460608201526080600454910152565b0390a14361271f565b60016080604051611b27816125d6565b6000815260008682015260006040820152836060820152015260006005556000600655600060075560085560016009557f654adb5cbaa52baea9293330b42459de9dc9b3046fced4e5dc39dcd396571f6b60405180611bad819060a082019160055481526006546020820152600754604082015260085460608201526080600954910152565b0390a1611bb657005b7f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989061ff00196013541660135560405160018152a1005b60405162461bcd60e51b815260048101879052601960248201527f696e76616c6964207265676973747261722061646472657373000000000000006044820152606490fd5b61ffff19166101011760135586611a1d565b60405162461bcd60e51b815260048101879052602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608490fd5b50303b158015611a075750600160ff821614611a07565b50600160ff821610611a00565b34610c2f576060366003190112610c2f57604051611ce1816125a0565b600435815260208101906024358252604081016044358152611d01612770565b6000546001600160a01b031633036118f55780518015611dc65760075411611d9057516004555b51600255516003557fd41a848f4338796659fc6f85bedcd07fe9eee900c21349ea011e3d2752930162604051806105c1819060a082019160018060a01b0380600054168252600154166020820152600254604082015260035460608201526080600454910152565b60405162461bcd60e51b815260206004820152600e60248201526d496e76616c696420496e7075747360901b6044820152606490fd5b50506000600455611d28565b34610c2f576020366003190112610c2f57611deb612709565b611df3612770565b6000546001600160a01b0390811633036118f55781611e5a6020927fe696533f02cb3abcaaf5e85cd893de5abf147a82fd1496ddd3e5219da0a66437941691611e3d83151561272c565b60018060a01b03166001600160601b0360a01b6001541617600155565b604051908152a16001601255602060405160018152f35b34610c2f5760e0366003190112610c2f576004356001600160401b038111610c2f57611ea190369060040161262d565b6024356001600160401b038111610c2f57611ec090369060040161262d565b6044356001600160401b038111610c2f57611edf90369060040161269e565b606435151560643503610c2f57611ef4612770565b6000546001600160a01b031633036118f5576064608435116124445760095460405192611f2084612585565b818452602084019485526040840152816060840152608435608084015260a43560a084015260c43560c0840152600052600a60205260406000209282518455519283516001600160401b0381116106dc57611f7e60018301546127c6565b601f811161240f575b506020601f82116001146123a0578192939495600092612395575b50508160011b916000199060031b1c19161760018201555b60408301519283516001600160401b0381116106dc57611fdd60028401546127c6565b601f8111612355575b506020601f82116001146122e65781929394956000926122db575b50508160011b916000199060031b1c19161760028301555b606081015180516001600160401b0381116106dc576020600385019261203f838561282a565b019160005260206000209060005b8160031c811061229857506007198116810361223e575b50505060c08160806006930151600485015560a08101516005850155015191015560005b815160ff8216908110156120d4576120a563ffffffff91846128a1565b5116600052600b6020526120c0604060002060095490612904565b60ff809116908114610ec357600101612088565b60095480600052600a6020527fb122d9f73c46b97df52cc57ddb3563f7d591316c0547c3d4f980d5904b0e9c3160406000206040518091848252604060208301528054604083015260e060608301526006612166612139610120850160018501612927565b612153603f19918287820301608088015260028601612927565b908582030160a0860152600384016129bd565b91600481015460c0850152600581015460e085015201546101008301520390a1600554158015612234575b612213575b6064356121d1575b5060055460018101809111610ec35760055560095460018101809111610ec3576009556001601255602060405160018152f35b600c5490600160401b8210156106dc576121f482600161220d9401600c556128b5565b90919082549060031b91821b91600019901b1916179055565b8061219e565b8060065560008051602061385d8339815191526020604051838152a1612196565b5060065415612191565b60009260005b60071983168303811061226257505060031c015560c0600685612064565b9093602061228f60019263ffffffff885116908560021b60031b9163ffffffff809116831b921b19161790565b95019101612244565b6000805b600881106122b157508382015560010161204d565b855190959160019160209163ffffffff60058a901b81811b199092169216901b179201950161229c565b015190508580612001565b6002840160005260206000209060005b601f198416811061233d575060019394959683601f19811610612324575b505050811b016002830155612019565b015160001960f88460031b161c19169055858080612314565b9091602060018192858b0151815501930191016122f6565b61238590600285016000526020600020601f840160051c8101916020851061238b575b601f0160051c0190612800565b85611fe6565b9091508190612378565b015190508580611fa2565b6001830160005260206000209060005b601f19841681106123f7575060019394959683601f198116106123de575b505050811b016001820155611fba565b015160001960f88460031b161c191690558580806123ce565b9091602060018192858b0151815501930191016123b0565b61243e90600184016000526020600020601f840160051c8101916020851061238b57601f0160051c0190612800565b85611f87565b60405162461bcd60e51b815260206004820152600d60248201526c1a5b9d985b1a59081cdc1b1a5d609a1b6044820152606490fd5b34610c2f576020366003190112610c2f576124926135cc565b50600435600052600a60205261152f61151b6040600020612e82565b919082519283825260005b8481106124da575050826000602080949584010152601f8019910116010190565b6020818301810151848301820152016124b9565b90815181526020916125226125108483015160e08686015260e08501906124ae565b604083015184820360408601526124ae565b92606082015193838103606085015281808651928381520195019160005b82811061256b575050505060c081608082930151608085015260a081015160a0850152015191015290565b835163ffffffff1687529581019592810192600101612540565b60e081019081106001600160401b038211176106dc57604052565b606081019081106001600160401b038211176106dc57604052565b608081019081106001600160401b038211176106dc57604052565b60a081019081106001600160401b038211176106dc57604052565b90601f801991011681019081106001600160401b038211176106dc57604052565b6001600160401b0381116106dc57601f01601f191660200190565b81601f82011215610c2f5780359061264482612612565b9261265260405194856125f1565b82845260208383010111610c2f57816000926020809301838601378301015290565b6001600160401b0381116106dc5760051b60200190565b6004359063ffffffff82168203610c2f57565b81601f82011215610c2f578035916126b583612674565b926126c360405194856125f1565b808452602092838086019260051b820101928311610c2f578301905b8282106126ed575050505090565b813563ffffffff81168103610c2f5781529083019083016126df565b600435906001600160a01b0382168203610c2f57565b91908201809211610ec357565b1561273357565b60405162461bcd60e51b8152602060048201526015602482015274696e76616c696420696e707574206164647265737360581b6044820152606490fd5b600260125414612781576002601255565b60405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b90600182811c921680156127f6575b60208310146127e057565b634e487b7160e01b600052602260045260246000fd5b91607f16916127d5565b81811061280b575050565b60008155600101612800565b81810292918115918404141715610ec357565b90600160401b81116106dc57815481835580821061284757505050565b612877926000526007602060002091601c82850160031c84019460021b1680612879575b500160031c0190612800565b565b600019908186019182549160200360031b1c1690553861286b565b8051156108315760200190565b80518210156108315760209160051b010190565b600c5481101561083157600c6000527fdf6966c971051c3d54ec59162606531493a51404a002842f56009d7e5cf4a8c70190600090565b80548210156108315760005260206000200190600090565b90815491600160401b8310156106dc57826121f4916001612877950181556128ec565b9060009291805491612938836127c6565b91828252600193848116908160001461299a575060011461295a575b50505050565b90919394506000526020928360002092846000945b838610612986575050505001019038808080612954565b80548587018301529401938590820161296f565b9294505050602093945060ff191683830152151560051b01019038808080612954565b805480835260208093019160005282600020906000915b816007840110612ade57549184828210612ac8575b828210612ab0575b828210612a97575b828210612a7e575b828210612a65575b828210612a4c575b828210612a33575b5010612a26575b50905090565b60e01c8152018038612a20565b6001919463ffffffff8560c01c16815201930184612a19565b6001919463ffffffff8560a01c16815201930184612a11565b6001919463ffffffff8560801c16815201930184612a09565b6001919463ffffffff8560601c16815201930184612a01565b6001919463ffffffff8560401c168152019301846129f9565b6001919463ffffffff85831c168152019301846129f1565b6001919463ffffffff85168152019301846129e9565b926001610100600892865463ffffffff808216835280828b1c168a84015260408183821c169084015260608183821c169084015260808183821c169084015260a08183821c169084015260c09082821c169083015260e090811c908201520194019201916129d4565b156118f557565b600c5490818152602080910191600c6000527fdf6966c971051c3d54ec59162606531493a51404a002842f56009d7e5cf4a8c7916000905b828210612b94575050505090565b835485529384019360019384019390910190612b86565b91908203918211610ec357565b612bc281546127c6565b9081612bcc575050565b81601f60009311600114612bde575055565b908083918252612bfd601f60208420940160051c840160018501612800565b5555565b51906001600160a01b0382168203610c2f57565b8091036103e08112610c2f576040918251926103a092838501908582106001600160401b038311176106dc576060918352612c4f84612c01565b8652612c5d60208501612c01565b6020870152612c6d838501612c01565b83870152612c7c828501612c01565b82870152612c8c60808501612c01565b6080870152612c9d60a08501612c01565b60a0870152612cae60c08501612c01565b60c0870152612cbf60e08501612c01565b60e0870152610100612cd2818601612c01565b90870152610120612ce4818601612c01565b90870152610140612cf6818601612c01565b90870152610160612d08818601612c01565b90870152610180612d1a818601612c01565b9087015261019f190112610c2f57612e669181612e5c6103c0935195612d3f876125a0565b6101a0968785015181526101c0978886015160208301526101e094858701519083015289015261020096612d74888601612c01565b9089015261022092612d87848601612c01565b9089015261024096612d9a888601612c01565b9089015261026092838501519089015261028096612db9888601612c01565b908901526102a092612dcc848601612c01565b908901526102c096612ddf888601612c01565b908901526102e092612df2848601612c01565b9089015261030096612e05888601612c01565b9089015261032092612e18848601612c01565b9089015261034096612e2b888601612c01565b9089015261036092612e3e848601612c01565b9089015261038096612e51888601612c01565b908901528301612c01565b9086015201612c01565b9082015290565b63ffffffff809116908114610ec35760010190565b90604051612e8f81612585565b60c06006829480548452604051612ead816102f38160018601612927565b6020850152604051612ec6816102f38160028601612927565b6040850152604051612edf816102f381600386016129bd565b606085015260048101546080850152600581015460a08501520154910152565b6000198114610ec35760010190565b15612f1557565b60405162461bcd60e51b815260206004820152601060248201526f115b5c1d1e48125b99195e08119d5b9960821b6044820152606490fd5b15612f5457565b60405162461bcd60e51b815260206004820152600c60248201526b115e1c1a5c995908119d5b9960a21b6044820152606490fd5b90816020910312610c2f57518015158103610c2f5790565b90600d5482101561083157600d600052601c8260031c6000805160206138bd833981519152019260021b1690565b919091805483101561083157600052601c60206000208360031c019260021b1690565b9291808451908115801561355c575b505050606482810392818411610ec35760005b865181101561325c576000908180600d918254915b828110613217575b50156130fd5750506010548210156108315785826000805160206138dd83398151915201556011805483101561083157600052828260008051602061389d8339815191520155836130818787612817565b04600e8054841015610831576000526130ac8360008051602061387d8339815191520191825461271f565b90556130c3846130bc8888612817565b0486612bab565b600f8054841015610831576130f8936130f1916000526000805160206138fd8339815191520191825461271f565b9055612eff565b613013565b90925063ffffffff61310f838b6128a1565b5116600160401b91828110156106dc57610e9c613133916001968782019055612fa0565b90556010805490828210156106dc578482018091558110156108315787906000805160206138dd833981519152015560118054828110156106dc5784810180835581101561083157859160005260008051602061389d83398151915201558461319c8888612817565b04600e805490838210156106dc578582018082558210156108315760005260008051602061387d83398151915201556131e0856131d98989612817565b0487612bab565b90600f938454918210156106dc578101808555811015610831576130f8936000526000805160206138fd8339815191520155612eff565b8b8561322283612fa0565b9290549061323663ffffffff9384926128a1565b51169260031b1c16146132515761324c90612eff565b613028565b945050600138613030565b50505050509050604080519060209081835260c0808401918360a0928382880152600d5480955260e0808801956000805160206138bd8339815191526000905b8260078301106134f85754938282106134e0575b8282106134c6575b8282106134ac575b828210613491575b828210613476575b82821061345c575b828210613444575b5010613435575b505050601f939293199081868603019086015282600e5494858152019360008051602061387d8339815191529060005b818110613421575050508085850301606086015282600f549485815201936000805160206138fd8339815191529060005b81811061340d5750505080858503016080860152826010549485815201936000805160206138dd8339815191529060005b8181106133f957505050848403019084015280601154928381520191601160005260008051602061389d833981519152916000905b8282106133e2575050505090807f60a7668728d323bbf6313b5698e94df25d3276093fcfb61da0e8ae6d742ef9a1920390a1565b8354855293840193600193840193909101906133ae565b825487529585019560019283019201613379565b825487529585019560019283019201613348565b825487529585019560019283019201613317565b1c8452909201918338806132e7565b84901c63ffffffff16885296840196600101386132e0565b90978560019163ffffffff878b1c168152019801906132d8565b90978560019163ffffffff8760801c168152019801906132d0565b90978560019163ffffffff8760601c168152019801906132c8565b90978560019163ffffffff878a1c168152019801906132c0565b90978560019163ffffffff87831c168152019801906132b8565b90978560019163ffffffff87168152019801906132b0565b805463ffffffff8082168b52818c1c81168c8c015281891c8116898c0152606082811c8216908c0152608082811c8216908c0152818a1c81168a8c015281871c16868b0152841c848a0152610100909801978995506008919091019060010161329c565b9091925061356d5704388080613000565b634e487b7160e01b600052601260045260246000fd5b6000929091806135c557508061359d575060409150015190565b906020810151821190816135ba575b506135b5575090565b905090565b9050518110386135ac565b9250505090565b604051906135d982612585565b600060c08382815260606020820152606060408201526060808201528260808201528260a08201520152565b9061360f82612674565b61361c60405191826125f1565b828152809261362d601f1991612674565b019060005b82811061363e57505050565b6020906136496135cc565b82828501015201613632565b60c081015180151593928461368d575b5050821561367257505090565b60a001518015159250908261368657505090565b1015905090565b101592503880613665565b9091600c54906136a782613605565b9360005b83811061371057505050506136ca9060405161136e816102f381612b4e565b1580156136fa575b156136e657506136e190612894565b515190565b60018101809111610ec3576136e1916128a1565b5081516000198101908111610ec35781146136d2565b8061371d613753926128b5565b9054600391821b1c600052600a602090808252604091613744888861029b86600020612e82565b15613758575b50505050612eff565b6136ab565b61377693613765866128b5565b9054911b1c60005252600020612e82565b61378082896128a1565b5261378b81886128a1565b503880808061374a565b9060005b82518110156137ca57816137ad82856128a1565b51146137c1576137bc90612eff565b613799565b91505090600190565b505050600090600090565b9060005b825163ffffffff908183169081101561380f576137f78291866128a1565b5116908316146137c15761380a90612e6d565b6137d9565b5050505050600090600090565b90919015613828575090565b8151156138385750805190602001fd5b60405162461bcd60e51b8152602060048201529081906111879060248301906124ae56fe35cd92409e9df67a917c3d763d3d253f9f2a33f2fb7343a29bf6c420e4901780bb7b4a454dc3493923482f07822329ed19e8244eff582cc204f8554c3620c3fd31ecc21a745e3968a04e9570e4425bc18fa8019c68028196b546d1669c200c68d7b6990105719101dabeb77144f2a3385c8033acd3af97e9423a695e81ad1eb51b6847dc741a1b0cd08d278845f9d819d87b734759afb55fe2de5cb82a9ae6728d1108e10bcb7c27dddfc02ed9d693a074039d026cf4ea4240b40f7d581ac802a2646970667358221220876ebfe2f306dd97af4eb0a36c6c51f9d133003f79ec77f27fd4024e245b4bee64736f6c63430008120033";

type IndexFundConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: IndexFundConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class IndexFund__factory extends ContractFactory {
  constructor(...args: IndexFundConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<IndexFund> {
    return super.deploy(overrides || {}) as Promise<IndexFund>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): IndexFund {
    return super.attach(address) as IndexFund;
  }
  override connect(signer: Signer): IndexFund__factory {
    return super.connect(signer) as IndexFund__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): IndexFundInterface {
    return new utils.Interface(_abi) as IndexFundInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IndexFund {
    return new Contract(address, _abi, signerOrProvider) as IndexFund;
  }
}
