/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  AccountsVaultFacet,
  AccountsVaultFacetInterface,
} from "../../../../../contracts/core/accounts/facets/AccountsVaultFacet";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
    ],
    name: "AllowanceStateUpdatedTo",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "id",
            type: "uint32",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "quorum",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "threshold",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "votingPeriod",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timelockPeriod",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expirationPeriod",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "proposalDeposit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "snapshotPeriod",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "enum AngelCoreStruct.TokenType",
                name: "token",
                type: "uint8",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "existingCw20Data",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "newCw20InitialSupply",
                    type: "uint256",
                  },
                  {
                    internalType: "string",
                    name: "newCw20Name",
                    type: "string",
                  },
                  {
                    internalType: "string",
                    name: "newCw20Symbol",
                    type: "string",
                  },
                  {
                    components: [
                      {
                        internalType: "enum AngelCoreStruct.veTypeEnum",
                        name: "ve_type",
                        type: "uint8",
                      },
                      {
                        components: [
                          {
                            internalType: "uint128",
                            name: "value",
                            type: "uint128",
                          },
                          {
                            internalType: "uint256",
                            name: "scale",
                            type: "uint256",
                          },
                          {
                            internalType: "uint128",
                            name: "slope",
                            type: "uint128",
                          },
                          {
                            internalType: "uint128",
                            name: "power",
                            type: "uint128",
                          },
                        ],
                        internalType: "struct AngelCoreStruct.veTypeData",
                        name: "data",
                        type: "tuple",
                      },
                    ],
                    internalType: "struct AngelCoreStruct.veType",
                    name: "bondingveveType",
                    type: "tuple",
                  },
                  {
                    internalType: "string",
                    name: "bondingveName",
                    type: "string",
                  },
                  {
                    internalType: "string",
                    name: "bondingveSymbol",
                    type: "string",
                  },
                  {
                    internalType: "uint256",
                    name: "bondingveDecimals",
                    type: "uint256",
                  },
                  {
                    internalType: "address",
                    name: "bondingveReserveDenom",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "bondingveReserveDecimals",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "bondingveUnbondingPeriod",
                    type: "uint256",
                  },
                ],
                internalType: "struct AngelCoreStruct.DaoTokenData",
                name: "data",
                type: "tuple",
              },
            ],
            internalType: "struct AngelCoreStruct.DaoToken",
            name: "token",
            type: "tuple",
          },
          {
            internalType: "enum AngelCoreStruct.EndowmentType",
            name: "endow_type",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "endowOwner",
            type: "address",
          },
          {
            internalType: "address",
            name: "registrarContract",
            type: "address",
          },
        ],
        indexed: false,
        internalType: "struct subDaoMessage.InstantiateMsg",
        name: "createdaomessage",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "address",
        name: "daoAddress",
        type: "address",
      },
    ],
    name: "DaoContractCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "DonationDeposited",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "donationMatchContract",
        type: "address",
      },
    ],
    name: "DonationMatchSetup",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "DonationWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            components: [
              {
                internalType: "uint256[]",
                name: "sdgs",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "general",
                type: "uint256[]",
              },
            ],
            internalType: "struct AngelCoreStruct.Categories",
            name: "categories",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "tier",
            type: "uint256",
          },
          {
            internalType: "enum AngelCoreStruct.EndowmentType",
            name: "endow_type",
            type: "uint8",
          },
          {
            internalType: "string",
            name: "logo",
            type: "string",
          },
          {
            internalType: "string",
            name: "image",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "maturityTime",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "string[]",
                name: "locked_vault",
                type: "string[]",
              },
              {
                internalType: "uint256[]",
                name: "lockedPercentage",
                type: "uint256[]",
              },
              {
                internalType: "string[]",
                name: "liquid_vault",
                type: "string[]",
              },
              {
                internalType: "uint256[]",
                name: "liquidPercentage",
                type: "uint256[]",
              },
            ],
            internalType: "struct AngelCoreStruct.AccountStrategies",
            name: "strategies",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "string[]",
                name: "locked",
                type: "string[]",
              },
              {
                internalType: "uint256[]",
                name: "lockedAmount",
                type: "uint256[]",
              },
              {
                internalType: "string[]",
                name: "liquid",
                type: "string[]",
              },
              {
                internalType: "uint256[]",
                name: "liquidAmount",
                type: "uint256[]",
              },
            ],
            internalType: "struct AngelCoreStruct.OneOffVaults",
            name: "oneoffVaults",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "rebalanceLiquidProfits",
                type: "bool",
              },
              {
                internalType: "uint32",
                name: "lockedRebalanceToLiquid",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "interestDistribution",
                type: "uint32",
              },
              {
                internalType: "bool",
                name: "lockedPrincipleToLiquid",
                type: "bool",
              },
              {
                internalType: "uint32",
                name: "principleDistribution",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "basis",
                type: "uint32",
              },
            ],
            internalType: "struct LocalRegistrarLib.RebalanceParams",
            name: "rebalance",
            type: "tuple",
          },
          {
            internalType: "bool",
            name: "kycDonorsOnly",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "pendingRedemptions",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "proposalLink",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "multisig",
            type: "address",
          },
          {
            internalType: "address",
            name: "dao",
            type: "address",
          },
          {
            internalType: "address",
            name: "daoToken",
            type: "address",
          },
          {
            internalType: "bool",
            name: "donationMatchActive",
            type: "bool",
          },
          {
            internalType: "address",
            name: "donationMatchContract",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "allowlistedBeneficiaries",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "allowlistedContributors",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "maturityAllowlist",
            type: "address[]",
          },
          {
            components: [
              {
                internalType: "address",
                name: "payoutAddress",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "feePercentage",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "active",
                type: "bool",
              },
            ],
            internalType: "struct AngelCoreStruct.EndowmentFee",
            name: "withdrawFee",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "payoutAddress",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "feePercentage",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "active",
                type: "bool",
              },
            ],
            internalType: "struct AngelCoreStruct.EndowmentFee",
            name: "depositFee",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "payoutAddress",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "feePercentage",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "active",
                type: "bool",
              },
            ],
            internalType: "struct AngelCoreStruct.EndowmentFee",
            name: "balanceFee",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "address",
                    name: "addr",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "expires",
                    type: "uint256",
                  },
                ],
                internalType: "struct AngelCoreStruct.Delegate",
                name: "strategies",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "addr",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "expires",
                    type: "uint256",
                  },
                ],
                internalType: "struct AngelCoreStruct.Delegate",
                name: "allowlistedBeneficiaries",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "addr",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "expires",
                    type: "uint256",
                  },
                ],
                internalType: "struct AngelCoreStruct.Delegate",
                name: "allowlistedContributors",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "addr",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "expires",
                    type: "uint256",
                  },
                ],
                internalType: "struct AngelCoreStruct.Delegate",
                name: "maturityAllowlist",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "addr",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "expires",
                    type: "uint256",
                  },
                ],
                internalType: "struct AngelCoreStruct.Delegate",
                name: "maturityTime",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "addr",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "expires",
                    type: "uint256",
                  },
                ],
                internalType: "struct AngelCoreStruct.Delegate",
                name: "withdrawFee",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "addr",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "expires",
                    type: "uint256",
                  },
                ],
                internalType: "struct AngelCoreStruct.Delegate",
                name: "depositFee",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "addr",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "expires",
                    type: "uint256",
                  },
                ],
                internalType: "struct AngelCoreStruct.Delegate",
                name: "balanceFee",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "addr",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "expires",
                    type: "uint256",
                  },
                ],
                internalType: "struct AngelCoreStruct.Delegate",
                name: "name",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "addr",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "expires",
                    type: "uint256",
                  },
                ],
                internalType: "struct AngelCoreStruct.Delegate",
                name: "image",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "addr",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "expires",
                    type: "uint256",
                  },
                ],
                internalType: "struct AngelCoreStruct.Delegate",
                name: "logo",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "addr",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "expires",
                    type: "uint256",
                  },
                ],
                internalType: "struct AngelCoreStruct.Delegate",
                name: "categories",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "addr",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "expires",
                    type: "uint256",
                  },
                ],
                internalType: "struct AngelCoreStruct.Delegate",
                name: "splitToLiquid",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "addr",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "expires",
                    type: "uint256",
                  },
                ],
                internalType: "struct AngelCoreStruct.Delegate",
                name: "ignoreUserSplits",
                type: "tuple",
              },
            ],
            internalType: "struct AngelCoreStruct.SettingsController",
            name: "settingsController",
            type: "tuple",
          },
          {
            internalType: "uint32",
            name: "parent",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "ignoreUserSplits",
            type: "bool",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "defaultSplit",
                type: "uint256",
              },
            ],
            internalType: "struct AngelCoreStruct.SplitDetails",
            name: "splitToLiquid",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "referralId",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct AccountStorage.Endowment",
        name: "endowment",
        type: "tuple",
      },
    ],
    name: "EndowmentCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "setting",
        type: "string",
      },
    ],
    name: "EndowmentSettingUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    name: "RemoveAllowance",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "enum AngelCoreStruct.AccountType",
        name: "accountType",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenout",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountout",
        type: "uint256",
      },
    ],
    name: "SwapToken",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "string",
            name: "version",
            type: "string",
          },
          {
            internalType: "address",
            name: "registrarContract",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "nextAccountId",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "maxGeneralCategoryId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "subDao",
            type: "address",
          },
          {
            internalType: "address",
            name: "gateway",
            type: "address",
          },
          {
            internalType: "address",
            name: "gasReceiver",
            type: "address",
          },
          {
            internalType: "bool",
            name: "reentrancyGuardLocked",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct AccountStorage.Config",
        name: "config",
        type: "tuple",
      },
    ],
    name: "UpdateConfig",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            components: [
              {
                internalType: "uint256[]",
                name: "sdgs",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "general",
                type: "uint256[]",
              },
            ],
            internalType: "struct AngelCoreStruct.Categories",
            name: "categories",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "tier",
            type: "uint256",
          },
          {
            internalType: "enum AngelCoreStruct.EndowmentType",
            name: "endow_type",
            type: "uint8",
          },
          {
            internalType: "string",
            name: "logo",
            type: "string",
          },
          {
            internalType: "string",
            name: "image",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "maturityTime",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "string[]",
                name: "locked_vault",
                type: "string[]",
              },
              {
                internalType: "uint256[]",
                name: "lockedPercentage",
                type: "uint256[]",
              },
              {
                internalType: "string[]",
                name: "liquid_vault",
                type: "string[]",
              },
              {
                internalType: "uint256[]",
                name: "liquidPercentage",
                type: "uint256[]",
              },
            ],
            internalType: "struct AngelCoreStruct.AccountStrategies",
            name: "strategies",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "string[]",
                name: "locked",
                type: "string[]",
              },
              {
                internalType: "uint256[]",
                name: "lockedAmount",
                type: "uint256[]",
              },
              {
                internalType: "string[]",
                name: "liquid",
                type: "string[]",
              },
              {
                internalType: "uint256[]",
                name: "liquidAmount",
                type: "uint256[]",
              },
            ],
            internalType: "struct AngelCoreStruct.OneOffVaults",
            name: "oneoffVaults",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "rebalanceLiquidProfits",
                type: "bool",
              },
              {
                internalType: "uint32",
                name: "lockedRebalanceToLiquid",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "interestDistribution",
                type: "uint32",
              },
              {
                internalType: "bool",
                name: "lockedPrincipleToLiquid",
                type: "bool",
              },
              {
                internalType: "uint32",
                name: "principleDistribution",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "basis",
                type: "uint32",
              },
            ],
            internalType: "struct LocalRegistrarLib.RebalanceParams",
            name: "rebalance",
            type: "tuple",
          },
          {
            internalType: "bool",
            name: "kycDonorsOnly",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "pendingRedemptions",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "proposalLink",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "multisig",
            type: "address",
          },
          {
            internalType: "address",
            name: "dao",
            type: "address",
          },
          {
            internalType: "address",
            name: "daoToken",
            type: "address",
          },
          {
            internalType: "bool",
            name: "donationMatchActive",
            type: "bool",
          },
          {
            internalType: "address",
            name: "donationMatchContract",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "allowlistedBeneficiaries",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "allowlistedContributors",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "maturityAllowlist",
            type: "address[]",
          },
          {
            components: [
              {
                internalType: "address",
                name: "payoutAddress",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "feePercentage",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "active",
                type: "bool",
              },
            ],
            internalType: "struct AngelCoreStruct.EndowmentFee",
            name: "withdrawFee",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "payoutAddress",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "feePercentage",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "active",
                type: "bool",
              },
            ],
            internalType: "struct AngelCoreStruct.EndowmentFee",
            name: "depositFee",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "payoutAddress",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "feePercentage",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "active",
                type: "bool",
              },
            ],
            internalType: "struct AngelCoreStruct.EndowmentFee",
            name: "balanceFee",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "address",
                    name: "addr",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "expires",
                    type: "uint256",
                  },
                ],
                internalType: "struct AngelCoreStruct.Delegate",
                name: "strategies",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "addr",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "expires",
                    type: "uint256",
                  },
                ],
                internalType: "struct AngelCoreStruct.Delegate",
                name: "allowlistedBeneficiaries",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "addr",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "expires",
                    type: "uint256",
                  },
                ],
                internalType: "struct AngelCoreStruct.Delegate",
                name: "allowlistedContributors",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "addr",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "expires",
                    type: "uint256",
                  },
                ],
                internalType: "struct AngelCoreStruct.Delegate",
                name: "maturityAllowlist",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "addr",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "expires",
                    type: "uint256",
                  },
                ],
                internalType: "struct AngelCoreStruct.Delegate",
                name: "maturityTime",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "addr",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "expires",
                    type: "uint256",
                  },
                ],
                internalType: "struct AngelCoreStruct.Delegate",
                name: "withdrawFee",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "addr",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "expires",
                    type: "uint256",
                  },
                ],
                internalType: "struct AngelCoreStruct.Delegate",
                name: "depositFee",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "addr",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "expires",
                    type: "uint256",
                  },
                ],
                internalType: "struct AngelCoreStruct.Delegate",
                name: "balanceFee",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "addr",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "expires",
                    type: "uint256",
                  },
                ],
                internalType: "struct AngelCoreStruct.Delegate",
                name: "name",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "addr",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "expires",
                    type: "uint256",
                  },
                ],
                internalType: "struct AngelCoreStruct.Delegate",
                name: "image",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "addr",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "expires",
                    type: "uint256",
                  },
                ],
                internalType: "struct AngelCoreStruct.Delegate",
                name: "logo",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "addr",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "expires",
                    type: "uint256",
                  },
                ],
                internalType: "struct AngelCoreStruct.Delegate",
                name: "categories",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "addr",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "expires",
                    type: "uint256",
                  },
                ],
                internalType: "struct AngelCoreStruct.Delegate",
                name: "splitToLiquid",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "addr",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "expires",
                    type: "uint256",
                  },
                ],
                internalType: "struct AngelCoreStruct.Delegate",
                name: "ignoreUserSplits",
                type: "tuple",
              },
            ],
            internalType: "struct AngelCoreStruct.SettingsController",
            name: "settingsController",
            type: "tuple",
          },
          {
            internalType: "uint32",
            name: "parent",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "ignoreUserSplits",
            type: "bool",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "defaultSplit",
                type: "uint256",
              },
            ],
            internalType: "struct AngelCoreStruct.SplitDetails",
            name: "splitToLiquid",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "referralId",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct AccountStorage.Endowment",
        name: "endowment",
        type: "tuple",
      },
    ],
    name: "UpdateEndowment",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
      {
        internalType: "bytes4",
        name: "strategy",
        type: "bytes4",
      },
      {
        internalType: "string",
        name: "token",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "lockAmt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "liquidAmt",
        type: "uint256",
      },
    ],
    name: "strategyInvest",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
      {
        internalType: "bytes4",
        name: "strategy",
        type: "bytes4",
      },
      {
        internalType: "string",
        name: "token",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "lockAmt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "liquidAmt",
        type: "uint256",
      },
    ],
    name: "strategyRedeem",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
      {
        internalType: "bytes4",
        name: "strategy",
        type: "bytes4",
      },
      {
        internalType: "string",
        name: "token",
        type: "string",
      },
    ],
    name: "strategyRedeemAll",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523461001657611526908161001c8239f35b600080fdfe6080604052600436101561001257600080fd5b60003560e01c806338896f3c1461071b57806350fbb6d1146104105763b7a944141461003d57600080fd5b60603660031901126103955760043563ffffffff811690818103610395576024803563ffffffff60e01b81168091036103955760443567ffffffffffffffff811161039557610090903690600401610c67565b906100996111c5565b6100a284610d0a565b6100c5601360018060a01b03926100bd848254163314610d74565b01541561114b565b807ff42c870234ce1595c214fdf331f4ac5d8ba4c010e9f64d466736c93812624d46541695604051936326fcc45760e11b8552836004860152602094858188818c5afa908115610349576000916103e3575b5060048110156103ce57869798610132600160009314610dc7565b60405163820d0f1560e01b815246600482015297889182905afa958615610349576000966103a1575b50908461018a928460608901511660405180809681946349ad89fb60e11b83528660048401528d830190610f58565b03915afa91821561034957600092610355575b5094610213836000949361024498604051906101b882610c0d565b600182528936818401376101cb82610fc0565b52845197604051986101dc8a610bda565b8952898901526361761df360e11b6040890152606088015216948560808201528460a08201528460c08201528460e082015261129d565b9160408201511690518361022630611387565b604051631f971e2d60e21b815298899586948593906004850161118e565b03925af192831561034957600093610324575b5060e08301928351600581101561030f576001146102b5575b505050519060058210156102a15750600214610291575b61028f611266565b005b61029a90610d3f565b5038610287565b634e487b7160e01b60009081526021600452fd5b8060a060c092015160036102c889610d3f565b018460005285526102df6040600020918254610fe3565b905501519160056102ef87610d3f565b0191600052526103056040600020918254610fe3565b9055388080610270565b85634e487b7160e01b60005260216004526000fd5b6103429193503d806000833e61033a8183610c29565b81019061101b565b9138610257565b6040513d6000823e3d90fd5b929150948483813d831161039a575b61036e8183610c29565b81010312610395576102138261024497610389600096610e73565b9450929750935061019d565b600080fd5b503d610364565b61018a929196506103c586913d806000833e6103bd8183610c29565b810190610e87565b9691925061015b565b86634e487b7160e01b60005260216004526000fd5b6104039150863d8811610409575b6103fb8183610c29565b810190610daf565b38610117565b503d6103f1565b61041936610cae565b91906104236111c5565b61042c85610d0a565b610447601360018060a01b03926100bd848254163314610d74565b807ff42c870234ce1595c214fdf331f4ac5d8ba4c010e9f64d466736c93812624d46541692604051956326fcc45760e11b875263ffffffff60e01b169485600488015260209460249786818a81855afa908115610349576000916106fe575b5060048110156106e95788916104c0600160009314610dc7565b60405163820d0f1560e01b815246600482015292839182905afa9283156103495786916000946106c6575b509061051a91856060860151168a6040518095819482936349ad89fb60e11b8452876004850152830190610f58565b03915afa9081156103495760009161067b575b506105aa968493926000956102139360405161054881610c0d565b600181528a36818301378d63ffffffff61056183610fc0565b911690528651946040519561057587610bda565b86528b8601526326e11bb960e11b60408601526060850152169687608084015260a083015260c08201528460e082015261129d565b03925af19283156103495760009361065e575b5060e08301928351600581101561030f57600114610604575b505050519060058210156102a157506002146105f45761028f611266565b6105fd90610d3f565b5080610287565b8060a060c0920151600361061789610d3f565b0184600052855261062e6040600020918254610fe3565b9055015191600561063e87610d3f565b0191600052526106546040600020918254610fe3565b90558380806105d6565b6106749193503d806000833e61033a8183610c29565b91856105bd565b9050858181959493953d83116106bf575b6106968183610c29565b81010312610395576105aa96600094846106b261021394610e73565b935050929394509661052d565b503d61068c565b61051a929194506106e1903d806000833e6103bd8183610c29565b9390916104eb565b88634e487b7160e01b60005260216004526000fd5b6107159150873d8911610409576103fb8183610c29565b8a6104a6565b61072436610cae565b610730949391946111c5565b61074d6001600160a01b0361074486610d0a565b54163314610d74565b7ff42c870234ce1595c214fdf331f4ac5d8ba4c010e9f64d466736c93812624d46546040516326fcc45760e11b81526001600160e01b0319841660048201526001600160a01b039091169390602081602481885afa90811561034957600091610bbb575b506004811015610ab55760016107c79114610dc7565b60405163820d0f1560e01b815246600482015290600082602481885afa91821561034957600092610b9e575b5060608201516040516349ad89fb60e11b815260206004820181905290969187906001600160a01b0316818061082c6024820188610f58565b03915afa95861561034957600096610b5d575b50602060249160036108508a610d3f565b0160018060a01b03891660005282526108708a6040600020541015610f7d565b600561087b8a610d3f565b0160018060a01b038916600052825261089b866040600020541015610f7d565b6040516302b05ecb60e11b81526001600160a01b038916600482015292839182905afa90811561034957600091610b22575b5015610ae85760006109ca936109b7926109e961096b84986040516108f181610c0d565b60018152602036818301378c63ffffffff61090b83610fc0565b911690528851916040519261091f84610bda565b83526001600160e01b03191660208301526320dcd90b60e01b604083015260608201526001600160a01b038b16608082015260a081018d905260c0810185905260e0810186905261129d565b9a61098e60018060a01b0360408901511697519461098830611387565b92610fe3565b926109da6040519d8e9a8b998a98630bb3905160e31b8a5260a060048b015260a48a0190610f58565b60031995868a83030160248b0152610f58565b9084888303016044890152610f58565b91858303016064860152610f58565b90608483015203925af192831561034957600093610acb575b5060e0830180516005811015610ab557600114908115610aa0575b50610a2a5761028f611266565b60c08360a0610a979501516003610a4086610d3f565b0160018060a01b038516600052602052610a60604060002091825461113e565b90550151906005610a7084610d3f565b019060018060a01b0316600052602052610a90604060002091825461113e565b9055610d3f565b50808080610287565b9050516005811015610ab55760041484610a1d565b634e487b7160e01b600052602160045260246000fd5b610ae19193503d806000833e61033a8183610c29565b9183610a02565b60405162461bcd60e51b8152602060048201526012602482015271151bdad95b881b9bdd08185c1c1c9bdd995960721b6044820152606490fd5b90506020813d602011610b55575b81610b3d60209383610c29565b810103126103955751801515810361039557886108cd565b3d9150610b30565b9095506020813d602011610b96575b81610b7960209383610c29565b81010312610395576020610b8e602492610e73565b96915061083f565b3d9150610b6c565b610bb49192503d806000833e6103bd8183610c29565b90876107f3565b610bd4915060203d602011610409576103fb8183610c29565b876107b1565b610100810190811067ffffffffffffffff821117610bf757604052565b634e487b7160e01b600052604160045260246000fd5b6040810190811067ffffffffffffffff821117610bf757604052565b90601f8019910116810190811067ffffffffffffffff821117610bf757604052565b67ffffffffffffffff8111610bf757601f01601f191660200190565b81601f8201121561039557803590610c7e82610c4b565b92610c8c6040519485610c29565b8284526020838301011161039557816000926020809301838601378301015290565b60a06003198201126103955760043563ffffffff8116810361039557916024356001600160e01b03198116810361039557916044359067ffffffffffffffff821161039557610cff91600401610c67565b906064359060843590565b63ffffffff166000527ff42c870234ce1595c214fdf331f4ac5d8ba4c010e9f64d466736c93812624d42602052604060002090565b63ffffffff166000527ff42c870234ce1595c214fdf331f4ac5d8ba4c010e9f64d466736c93812624d41602052604060002090565b15610d7b57565b60405162461bcd60e51b815260206004820152600c60248201526b155b985d5d1a1bdc9a5e995960a21b6044820152606490fd5b90816020910312610395575160048110156103955790565b15610dce57565b60405162461bcd60e51b815260206004820152601560248201527415985d5b1d081a5cc81b9bdd08185c1c1c9bdd9959605a1b6044820152606490fd5b60005b838110610e1e5750506000910152565b8181015183820152602001610e0e565b81601f82011215610395578051610e4481610c4b565b92610e526040519485610c29565b8184526020828401011161039557610e709160208085019101610e0b565b90565b51906001600160a01b038216820361039557565b9060208282031261039557815167ffffffffffffffff928382116103955701610100818303126103955760405192610ebe84610bda565b81518181116103955783610ed3918401610e2e565b845260208201516020850152610eeb60408301610e73565b6040850152610efc60608301610e73565b606085015260808201518181116103955783610f19918401610e2e565b608085015260a08201519081116103955760e092610f38918301610e2e565b60a0840152610f4960c08201610e73565b60c0840152015160e082015290565b90602091610f7181518092818552858086019101610e0b565b601f01601f1916010190565b15610f8457565b60405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742042616c616e636560601b6044820152606490fd5b805115610fcd5760200190565b634e487b7160e01b600052603260045260246000fd5b91908201809211610ff057565b634e487b7160e01b600052601160045260246000fd5b51906001600160e01b03198216820361039557565b602090818184031261039557805167ffffffffffffffff9182821161039557019161010083850312610395576040519361105485610bda565b83518381116103955781611069918601610e2e565b8552611076828501611006565b8286015261108660408501611006565b6040860152606084015183811161039557840181601f82011215610395578051938411610bf7578360051b90604051946110c285840187610c29565b85528380860192820101928311610395578301905b8282106111225750505050606083015260e0906110f660808201610e73565b608084015260a081015160a084015260c081015160c0840152015160058110156103955760e082015290565b815163ffffffff811681036103955781529083019083016110d7565b91908203918211610ff057565b1561115257565b60405162461bcd60e51b8152602060048201526014602482015273526564656d7074696f6e496e50726f677265737360601b6044820152606490fd5b916111b7906111a9610e709593606086526060860190610f58565b908482036020860152610f58565b916040818403910152610f58565b7ff42c870234ce1595c214fdf331f4ac5d8ba4c010e9f64d466736c93812624d4a805460ff8160a01c1615801561125d575b1561121857333003611207575050565b60ff60a01b1916600160a01b179055565b60405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b503330146111f7565b33300361126f57565b7ff42c870234ce1595c214fdf331f4ac5d8ba4c010e9f64d466736c93812624d4a805460ff60a01b19169055565b90815163ffffffff60e01b602090808286015116906040860151169260608601519560018060a01b0360808201511660a08201519060e060c0840151930151946005861015610ab55795604051976113026101009687848c01526101208b0190610f58565b9760408a01526060890152601f1996878982030160808a015281808c5192838152019b019160005b82811061135c575050505060a087015260c086015260e08501528301529281900392830181529091610e709082610c29565b835163ffffffff168d529b81019b9281019260010161132a565b908151811015610fcd570160200190565b604051906bffffffffffffffffffffffff199060601b166020820152601481526113b081610c0d565b8051604051906113bf82610c0d565b601082526f181899199a1a9b1b9c1cb0b131b232b360811b6020830152825160019281841b600292808204841490151715610ff057820194858311610ff05761142061140a87610c4b565b966114186040519889610c29565b808852610c4b565b6020870190601f1901368237865115610fcd57603090538551851015610fcd576078602187015360005b84811061145a5750505050505090565b6001600160f81b03198061147b6114718486611376565b5160fc1c86611376565b51169082881b91838304871484151715610ff05782870190818811610ff0576114a89060001a918b611376565b536114c3600f6114b88587611376565b5160f81c1686611376565b51166003918201809211610ff0576114df9060001a9189611376565b536000198114610ff057850161144a56fea26469706673582212206bc6466159170632a125e1764fec0856d3e2dee48e5466cdeea00fcb76a198e564736f6c63430008120033";

type AccountsVaultFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AccountsVaultFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AccountsVaultFacet__factory extends ContractFactory {
  constructor(...args: AccountsVaultFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AccountsVaultFacet> {
    return super.deploy(overrides || {}) as Promise<AccountsVaultFacet>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): AccountsVaultFacet {
    return super.attach(address) as AccountsVaultFacet;
  }
  override connect(signer: Signer): AccountsVaultFacet__factory {
    return super.connect(signer) as AccountsVaultFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AccountsVaultFacetInterface {
    return new utils.Interface(_abi) as AccountsVaultFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AccountsVaultFacet {
    return new Contract(address, _abi, signerOrProvider) as AccountsVaultFacet;
  }
}
