/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  AngelCoreStruct,
  AngelCoreStructInterface,
} from "../../../../contracts/core/struct.sol/AngelCoreStruct";

const _abi = [
  {
    inputs: [],
    name: "accountStrategiesDefaut",
    outputs: [
      {
        components: [
          {
            internalType: "string[]",
            name: "locked_vault",
            type: "string[]",
          },
          {
            internalType: "uint256[]",
            name: "lockedPercentage",
            type: "uint256[]",
          },
          {
            internalType: "string[]",
            name: "liquid_vault",
            type: "string[]",
          },
          {
            internalType: "uint256[]",
            name: "liquidPercentage",
            type: "uint256[]",
          },
        ],
        internalType: "struct AngelCoreStruct.AccountStrategies",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "beneficiaryDefault",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint32",
                name: "endowId",
                type: "uint32",
              },
              {
                internalType: "uint256",
                name: "fundId",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "addr",
                type: "address",
              },
            ],
            internalType: "struct AngelCoreStruct.BeneficiaryData",
            name: "data",
            type: "tuple",
          },
          {
            internalType: "enum AngelCoreStruct.BeneficiaryEnum",
            name: "enumData",
            type: "AngelCoreStruct.BeneficiaryEnum",
          },
        ],
        internalType: "struct AngelCoreStruct.Beneficiary",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "max",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "min",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "defaultSplit",
            type: "uint256",
          },
        ],
        internalType: "struct AngelCoreStruct.SplitDetails",
        name: "splits",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "userLocked",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "userLiquid",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "userOverride",
        type: "bool",
      },
    ],
    name: "checkSplits",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deductamount",
        type: "uint256",
      },
    ],
    name: "deductTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "donationsReceivedDefault",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "locked",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "liquid",
            type: "uint256",
          },
        ],
        internalType: "struct AngelCoreStruct.DonationsReceived",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "addresses",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "getTokenAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "oneOffVaultsDefault",
    outputs: [
      {
        components: [
          {
            internalType: "string[]",
            name: "locked",
            type: "string[]",
          },
          {
            internalType: "uint256[]",
            name: "lockedAmount",
            type: "uint256[]",
          },
          {
            internalType: "string[]",
            name: "liquid",
            type: "string[]",
          },
          {
            internalType: "uint256[]",
            name: "liquidAmount",
            type: "uint256[]",
          },
        ],
        internalType: "struct AngelCoreStruct.OneOffVaults",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523461001c57611474908161002282393081600a0152f35b600080fdfe6080604090808252307f0000000000000000000000000000000000000000000000000000000000000000146004918236101561003a57600080fd5b600093843560e01c9182631f2c260914610cf95750816327b2cd9714610c9e5781632a0bc060146107e85781633704191314610c6d578163564343ff14610b8057816367efb78614610b505781636f331a1414610b1b578163855762df14610904578163973d5ef514610821578163ad60ed5a146107e8578163b8108b2c14610733578163b9fb75c5146106d3578163d0352ce81461066b578163e2aaa7f81461052b578163e84b82f71461037c578163e9f4742714610257575063f362d2d41461010457600080fd5b610253576080366003190112610253573590602435916044359260643591845494815495855b60ff82818316101561024f576001908888878983898f5b878716106101a557505050505050509061015e91610163576112dd565b61012a565b6101a061018b610173838761102b565b905460039291831b1c6001600160a01b031688611337565b610195838a61102b565b9054911b1c876112ee565b6112dd565b90856101be6101b58b809561102b565b9290549661102b565b9560018060a01b03809254600398891b1c1692871b1c16146101f4575b50505050506101e9906112dd565b8887898c898f610141565b8594975061021e6101e99661021261024396959461022c949b61102b565b905490861b1c9361102b565b929093838554911b1c61132a565b825460001960039390931b92831b1916911b179055565b9050883889868d6101db565b8780f35b5080fd5b838560603660031901126103795781359267ffffffffffffffff92838511610375573660238601121561037557848101359361029285610f90565b9561029f84519788610f17565b85875260209560248789019160051b8301019136831161037157602401905b82821061034e5750505060243590811161034a579293926102e191369101610fa8565b916102ea610d54565b6001600160a01b0390811691855b875160ff821690811015610341578484610312838c611372565b511614610329575b50610324906112dd565b6102f8565b6103249197506103399087611372565b51969061031a565b82888751908152f35b8380fd5b81356001600160a01b038116810361036d5781529087019087016102be565b8780fd5b8680fd5b8280fd5b80fd5b929190506103755781600319360112610375578035602491823567ffffffffffffffff8111610527576103b29036908301610f39565b938594602091828201965b855460001981019081116105155780821015610507576103dd828861102b565b5083516103ff816103f18982018095611093565b03601f198101835282610f17565b51902061041e8a61042b88875180938282019586918c51928391610d6a565b8101038084520182610f17565b51902014610442575061043d90611006565b6103bd565b8661046a95969798995061045c929450610464935061102b565b50918661102b565b90611253565b825480156104f5576000190193610481858561102b565b9390936104e55750509084916104978254611059565b90816104a6575b505050505580f35b8390601f83116001146104c157505050555b8238808061049e565b83825281209290916104de90601f0160051c840160018501611116565b55556104b8565b634e487b7160e01b875286905285fd5b634e487b7160e01b8652603183528486fd5b50505050909192935061046a565b634e487b7160e01b8a5260118652878afd5b8580fd5b8385846103795760803660031901126103795781356024356044359360643567ffffffffffffffff81116106675761056591369101610fa8565b938054835495855b60ff8082169084821015610663576001908a858a8a8d8b81955b878716106105eb5750505050505050906105a792916105ac575b506112dd565b61056d565b6105de6105e5916105d86105c0858a61102b565b905460039190911b1c6001600160a01b03168b611337565b85611372565b51876112ee565b896105a1565b90856105fb6101b58c8c9561102b565b9560018060a01b03809254600398891b1c1692871b1c1614610632575b5050505050610626906112dd565b858a8a8d8f8c90610587565b8594975061021e6106269661065061065796959461022c949b611372565b519361102b565b9050858d8a868e610618565b8880f35b8480fd5b83858260031936011261037957508035602435918282111561069b5760208461069485856112d0565b9051908152f35b606490602085519162461bcd60e51b83528201526012602482015271496e73756666696369656e742046756e647360701b6044820152fd5b849084366003190160c0811261034a57606013610375578151906106f682610efb565b35815260243560208201526044358282015260a43590811515820361034a5790610727916084359060643590611386565b82519182526020820152f35b8390858060031936011261037957806020835161074f81610ec9565b845161075a81610efb565b838152838382015283868201528152015281519161077783610efb565b81835260208301908282528084018381526020825161079581610ec9565b868152600391019081528251955163ffffffff16865292516020860152516001600160a01b0316908401525190838210156107d557608083836060820152f35b634e487b7160e01b815260218452602490fd5b8490816003193601126102535761081d9061080161129b565b5061080a61129b565b9051918291602083526020830190610e32565b0390f35b84836103795761083036610e89565b829192935b835485101561090057600193835b83548110156108d057610856878361102b565b508351906108a36108af602092846108718582018093611093565b0394610885601f1996878101835282610f17565b51902093610893868a61102b565b5093885193849182018096611093565b03908101835282610f17565b519020146108c6575b6108c190611006565b610843565b93945084936108b8565b5093946108e191956108e757611006565b93610835565b6108fb6108f4828761102b565b5084611278565b611006565b8280f35b90508391610253576060366003190112610253578235906024359067ffffffffffffffff6044358181116105275761093f9036908801610f39565b9160018690865491602093848701915b8460ff821610610ac357505050610964578680f35b600160401b9586821015610ab057906109829160018201815561102b565b939093610a9e578051928311610a8b579082916109a9836109a38754611059565b8761112d565b81601f8411600114610a2557508792610a1a575b50508160011b916000199060031b1c19161790555b805491821015610a07576109ed92935060018201815561102b565b8154906000199060031b1b19169055808280808080808680f35b634e487b7160e01b835260418452602483fd5b0151905087806109bd565b8589528089209350601f1985169089905b828210610a73575050908460019594939210610a5a575b505050811b0190556109d2565b015160001960f88460031b161c19169055878080610a4d565b80600186978294978701518155019601940190610a36565b634e487b7160e01b875260418852602487fd5b634e487b7160e01b8752868852602487fd5b634e487b7160e01b885260418952602488fd5b610acd818b61102b565b508251610ae1816103f18a82018095611093565b519020825187810190610afc89828d5161041e81878c610d6a565b51902014610b13575b610b0e906112dd565b61094f565b8a9350610b05565b92505061025357610b4b600191610b3136610e9f565b949190828060a01b0316865201602052832091825461132a565b905580f35b92505061025357610b4b600191610b6636610e9f565b949190828060a01b031686520160205283209182546112d0565b848361037957610b8f36610e89565b919081935b600293848301908154871015610c6957600193855b8783018054821015610c2957610bbf8a8661102b565b506108a3610c0a8851610bfa8660209583610bdd8882018093611093565b0393610bf1601f1995868101835282610f17565b5190209661102b565b50938a5193849182018096611093565b51902014610c21575b610c1c90611006565b610ba9565b869550610c13565b5050958792610c4294989295610c4b575b505050611006565b93929092610b94565b610c6192610c589161102b565b50908501611278565b808780610c3a565b8480f35b83908560603660031901126103795750610c95602092610c8b610d39565b60443591356113ef565b90519015158152f35b91505060803660031901126103755760209250610cb9610d39565b610cd0610cc4610d54565b938260643591356113ef565b928315610ce2575b5050519015158152f35b6001600160a01b0391821691161491503880610cd8565b85908160031936011261025357602081610d138493610ec9565b828152015260208251610d2581610ec9565b828152018181528251918252516020820152f35b602435906001600160a01b0382168203610d4f57565b600080fd5b604435906001600160a01b0382168203610d4f57565b60005b838110610d7d5750506000910152565b8181015183820152602001610d6d565b908082519081815260208091019281808460051b8301019501936000915b848310610dbb5750505050505090565b909192939495848080600193601f1980878303018852601f8c51610dea81518092818752878088019101610d6a565b011601019801930193019194939290610dab565b90815180825260208080930193019160005b828110610e1e575050505090565b835185529381019392810192600101610e10565b610e86916060610e75610e63610e518551608086526080860190610d8d565b60208601518582036020870152610dfe565b60408501518482036040860152610d8d565b920151906060818403910152610dfe565b90565b6040906003190112610d4f576004359060243590565b6060906003190112610d4f57600435906024356001600160a01b0381168103610d4f579060443590565b6040810190811067ffffffffffffffff821117610ee557604052565b634e487b7160e01b600052604160045260246000fd5b6060810190811067ffffffffffffffff821117610ee557604052565b90601f8019910116810190811067ffffffffffffffff821117610ee557604052565b81601f82011215610d4f5780359067ffffffffffffffff8211610ee55760405192610f6e601f8401601f191660200185610f17565b82845260208383010111610d4f57816000926020809301838601378301015290565b67ffffffffffffffff8111610ee55760051b60200190565b81601f82011215610d4f57803591610fbf83610f90565b92610fcd6040519485610f17565b808452602092838086019260051b820101928311610d4f578301905b828210610ff7575050505090565b81358152908301908301610fe9565b60001981146110155760010190565b634e487b7160e01b600052601160045260246000fd5b80548210156110435760005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b90600182811c92168015611089575b602083101461107357565b634e487b7160e01b600052602260045260246000fd5b91607f1691611068565b6000929181546110a281611059565b926001918083169081156110fb57506001146110bf575b50505050565b90919293945060005260209081600020906000915b8583106110ea57505050500190388080806110b9565b8054858401529183019181016110d4565b60ff19168452505050811515909102019150388080806110b9565b818110611121575050565b60008155600101611116565b9190601f811161113c57505050565b611168926000526020600020906020601f840160051c8301931061116a575b601f0160051c0190611116565b565b909150819061115b565b9080821461124f576111868154611059565b9067ffffffffffffffff8211610ee55781906111ac826111a68654611059565b8661112d565b600090601f83116001146111e3576000926111d8575b50508160011b916000199060031b1c1916179055565b0154905038806111c2565b81526020808220858352818320935090601f1985169083905b82821061123657505090846001959493921061121d575b505050811b019055565b015460001960f88460031b161c19169055388080611213565b84958192958501548155600180910196019401906111fc565b5050565b91906112625761116891611174565b634e487b7160e01b600052600060045260246000fd5b90815491600160401b831015610ee557826104649160016111689501815561102b565b604051906080820182811067ffffffffffffffff821117610ee557604052606080838181528160208201528160408201520152565b9190820391821161101557565b60ff1660ff81146110155760010190565b90815491600160401b831015610ee557826113119160016111689501815561102b565b90919082549060031b91821b91600019901b1916179055565b9190820180921161101557565b8054600160401b811015610ee5576113549160018201815561102b565b819291549060031b9160018060a01b03809116831b921b1916179055565b80518210156110435760209160051b010190565b92156113a45750506040019081516064039160648311611015575190565b82518211156113c25750505190816064039160648311611015579190565b909291602001928351918282106000146113e85750506064039160648311611015575190565b9350919050565b80546001600160a01b03908116801515949390919085611432575b5050508261141757505090565b600101548015925090821561142b57505090565b1115905090565b1614925038808061140a56fea26469706673582212208cc914e0b494d7b9b15123e5084d1d6cc68893ce32d4f21874078092dcb1012164736f6c63430008120033";

type AngelCoreStructConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AngelCoreStructConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AngelCoreStruct__factory extends ContractFactory {
  constructor(...args: AngelCoreStructConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AngelCoreStruct> {
    return super.deploy(overrides || {}) as Promise<AngelCoreStruct>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): AngelCoreStruct {
    return super.attach(address) as AngelCoreStruct;
  }
  override connect(signer: Signer): AngelCoreStruct__factory {
    return super.connect(signer) as AngelCoreStruct__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AngelCoreStructInterface {
    return new utils.Interface(_abi) as AngelCoreStructInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AngelCoreStruct {
    return new Contract(address, _abi, signerOrProvider) as AngelCoreStruct;
  }
}
