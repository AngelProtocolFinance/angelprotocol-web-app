/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  AngelCoreStruct,
  AngelCoreStructInterface,
} from "../../../../contracts/core/struct.sol/AngelCoreStruct";

const _abi = [
  {
    inputs: [],
    name: "accountStrategiesDefaut",
    outputs: [
      {
        components: [
          {
            internalType: "string[]",
            name: "locked_vault",
            type: "string[]",
          },
          {
            internalType: "uint256[]",
            name: "lockedPercentage",
            type: "uint256[]",
          },
          {
            internalType: "string[]",
            name: "liquid_vault",
            type: "string[]",
          },
          {
            internalType: "uint256[]",
            name: "liquidPercentage",
            type: "uint256[]",
          },
        ],
        internalType: "struct AngelCoreStruct.AccountStrategies",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "beneficiaryDefault",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint32",
                name: "endowId",
                type: "uint32",
              },
              {
                internalType: "uint256",
                name: "fundId",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "addr",
                type: "address",
              },
            ],
            internalType: "struct AngelCoreStruct.BeneficiaryData",
            name: "data",
            type: "tuple",
          },
          {
            internalType: "enum AngelCoreStruct.BeneficiaryEnum",
            name: "enumData",
            type: "AngelCoreStruct.BeneficiaryEnum",
          },
        ],
        internalType: "struct AngelCoreStruct.Beneficiary",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "max",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "min",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "defaultSplit",
            type: "uint256",
          },
        ],
        internalType: "struct AngelCoreStruct.SplitDetails",
        name: "splits",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "userLocked",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "userLiquid",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "userOverride",
        type: "bool",
      },
    ],
    name: "checkSplits",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deductamount",
        type: "uint256",
      },
    ],
    name: "deductTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "donationsReceivedDefault",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "locked",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "liquid",
            type: "uint256",
          },
        ],
        internalType: "struct AngelCoreStruct.DonationsReceived",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "addresses",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "getTokenAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "oneOffVaultsDefault",
    outputs: [
      {
        components: [
          {
            internalType: "string[]",
            name: "locked",
            type: "string[]",
          },
          {
            internalType: "uint256[]",
            name: "lockedAmount",
            type: "uint256[]",
          },
          {
            internalType: "string[]",
            name: "liquid",
            type: "string[]",
          },
          {
            internalType: "uint256[]",
            name: "liquidAmount",
            type: "uint256[]",
          },
        ],
        internalType: "struct AngelCoreStruct.OneOffVaults",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523461001c5761148f908161002282393081600a0152f35b600080fdfe6080604090808252307f0000000000000000000000000000000000000000000000000000000000000000146004918236101561003a57600080fd5b600093843560e01c9182631f2c260914610d14575081632a0bc0601461085e5781633704191314610ce3578163564343ff14610bf657816367efb78614610bc65781636f331a1414610b91578163855762df1461097a578163973d5ef514610897578163ad60ed5a1461085e578163b8108b2c146107a9578163b9fb75c514610749578163bb37a283146106d3578163d0352ce81461066b578163e2aaa7f81461052b578163e84b82f71461037c578163e9f4742714610257575063f362d2d41461010457600080fd5b610253576080366003190112610253573590602435916044359260643591845494815495855b60ff82818316101561024f576001908888878983898f5b878716106101a557505050505050509061015e91610163576112f8565b61012a565b6101a061018b6101738387611046565b905460039291831b1c6001600160a01b031688611352565b610195838a611046565b9054911b1c87611309565b6112f8565b90856101be6101b58b8095611046565b92905496611046565b9560018060a01b03809254600398891b1c1692871b1c16146101f4575b50505050506101e9906112f8565b8887898c898f610141565b8594975061021e6101e99661021261024396959461022c949b611046565b905490861b1c93611046565b929093838554911b1c611345565b825460001960039390931b92831b1916911b179055565b9050883889868d6101db565b8780f35b5080fd5b838560603660031901126103795781359267ffffffffffffffff92838511610375573660238601121561037557848101359361029285610fab565b9561029f84519788610f32565b85875260209560248789019160051b8301019136831161037157602401905b82821061034e5750505060243590811161034a579293926102e191369101610fc3565b916102ea610e8e565b6001600160a01b0390811691855b875160ff821690811015610341578484610312838c61138d565b511614610329575b50610324906112f8565b6102f8565b610324919750610339908761138d565b51969061031a565b82888751908152f35b8380fd5b81356001600160a01b038116810361036d5781529087019087016102be565b8780fd5b8680fd5b8280fd5b80fd5b929190506103755781600319360112610375578035602491823567ffffffffffffffff8111610527576103b29036908301610f54565b938594602091828201965b855460001981019081116105155780821015610507576103dd8288611046565b5083516103ff816103f189820180956110ae565b03601f198101835282610f32565b51902061041e8a61042b88875180938282019586918c51928391610d54565b8101038084520182610f32565b51902014610442575061043d90611021565b6103bd565b8661046a95969798995061045c9294506104649350611046565b509186611046565b9061126e565b825480156104f55760001901936104818585611046565b9390936104e55750509084916104978254611074565b90816104a6575b505050505580f35b8390601f83116001146104c157505050555b8238808061049e565b83825281209290916104de90601f0160051c840160018501611131565b55556104b8565b634e487b7160e01b875286905285fd5b634e487b7160e01b8652603183528486fd5b50505050909192935061046a565b634e487b7160e01b8a5260118652878afd5b8580fd5b8385846103795760803660031901126103795781356024356044359360643567ffffffffffffffff81116106675761056591369101610fc3565b938054835495855b60ff8082169084821015610663576001908a858a8a8d8b81955b878716106105eb5750505050505050906105a792916105ac575b506112f8565b61056d565b6105de6105e5916105d86105c0858a611046565b905460039190911b1c6001600160a01b03168b611352565b8561138d565b5187611309565b896105a1565b90856105fb6101b58c8c95611046565b9560018060a01b03809254600398891b1c1692871b1c1614610632575b5050505050610626906112f8565b858a8a8d8f8c90610587565b8594975061021e6106269661065061065796959461022c949b61138d565b5193611046565b9050858d8a868e610618565b8880f35b8480fd5b83858260031936011261037957508035602435918282111561069b5760208461069485856112eb565b9051908152f35b606490602085519162461bcd60e51b83528201526012602482015271496e73756666696369656e742046756e647360701b6044820152fd5b8490846080366003190112610375576020925035906106f0610e73565b6106f8610e8e565b60ff8454161593841561072f575b508315610718575b5050519015158152f35b6001600160a01b039182169116149150838061070e565b610742919450826001606435920161140a565b9285610706565b849084366003190160c0811261034a576060136103755781519061076c82610f16565b35815260243560208201526044358282015260a43590811515820361034a579061079d9160843590606435906113a1565b82519182526020820152f35b839085806003193601126103795780602083516107c581610ee4565b84516107d081610f16565b83815283838201528386820152815201528151916107ed83610f16565b81835260208301908282528084018381526020825161080b81610ee4565b868152600391019081528251955163ffffffff16865292516020860152516001600160a01b03169084015251908382101561084b57608083836060820152f35b634e487b7160e01b815260218452602490fd5b84908160031936011261025357610893906108776112b6565b506108806112b6565b9051918291602083526020830190610e1c565b0390f35b8483610379576108a636610ea4565b829192935b835485101561097657600193835b8354811015610946576108cc8783611046565b50835190610919610925602092846108e785820180936110ae565b03946108fb601f1996878101835282610f32565b51902093610909868a611046565b50938851938491820180966110ae565b03908101835282610f32565b5190201461093c575b61093790611021565b6108b9565b939450849361092e565b509394610957919561095d57611021565b936108ab565b61097161096a8287611046565b5084611293565b611021565b8280f35b90508391610253576060366003190112610253578235906024359067ffffffffffffffff604435818111610527576109b59036908801610f54565b9160018690865491602093848701915b8460ff821610610b39575050506109da578680f35b600160401b9586821015610b2657906109f891600182018155611046565b939093610b14578051928311610b0157908291610a1f83610a198754611074565b87611148565b81601f8411600114610a9b57508792610a90575b50508160011b916000199060031b1c19161790555b805491821015610a7d57610a63929350600182018155611046565b8154906000199060031b1b19169055808280808080808680f35b634e487b7160e01b835260418452602483fd5b015190508780610a33565b8589528089209350601f1985169089905b828210610ae9575050908460019594939210610ad0575b505050811b019055610a48565b015160001960f88460031b161c19169055878080610ac3565b80600186978294978701518155019601940190610aac565b634e487b7160e01b875260418852602487fd5b634e487b7160e01b8752868852602487fd5b634e487b7160e01b885260418952602488fd5b610b43818b611046565b508251610b57816103f18a820180956110ae565b519020825187810190610b7289828d5161041e81878c610d54565b51902014610b89575b610b84906112f8565b6109c5565b8a9350610b7b565b92505061025357610bc1600191610ba736610eba565b949190828060a01b03168652016020528320918254611345565b905580f35b92505061025357610bc1600191610bdc36610eba565b949190828060a01b031686520160205283209182546112eb565b848361037957610c0536610ea4565b919081935b600293848301908154871015610cdf57600193855b8783018054821015610c9f57610c358a86611046565b50610919610c808851610c708660209583610c5388820180936110ae565b0393610c67601f1995868101835282610f32565b51902096611046565b50938a51938491820180966110ae565b51902014610c97575b610c9290611021565b610c1f565b869550610c89565b5050958792610cb894989295610cc1575b505050611021565b93929092610c0a565b610cd792610cce91611046565b50908501611293565b808780610cb0565b8480f35b83908560603660031901126103795750610d0b602092610d01610e73565b604435913561140a565b90519015158152f35b85908160031936011261025357602081610d2e8493610ee4565b828152015260208251610d4081610ee4565b828152018181528251918252516020820152f35b60005b838110610d675750506000910152565b8181015183820152602001610d57565b908082519081815260208091019281808460051b8301019501936000915b848310610da55750505050505090565b909192939495848080600193601f1980878303018852601f8c51610dd481518092818752878088019101610d54565b011601019801930193019194939290610d95565b90815180825260208080930193019160005b828110610e08575050505090565b835185529381019392810192600101610dfa565b610e70916060610e5f610e4d610e3b8551608086526080860190610d77565b60208601518582036020870152610de8565b60408501518482036040860152610d77565b920151906060818403910152610de8565b90565b602435906001600160a01b0382168203610e8957565b600080fd5b604435906001600160a01b0382168203610e8957565b6040906003190112610e89576004359060243590565b6060906003190112610e8957600435906024356001600160a01b0381168103610e89579060443590565b6040810190811067ffffffffffffffff821117610f0057604052565b634e487b7160e01b600052604160045260246000fd5b6060810190811067ffffffffffffffff821117610f0057604052565b90601f8019910116810190811067ffffffffffffffff821117610f0057604052565b81601f82011215610e895780359067ffffffffffffffff8211610f005760405192610f89601f8401601f191660200185610f32565b82845260208383010111610e8957816000926020809301838601378301015290565b67ffffffffffffffff8111610f005760051b60200190565b81601f82011215610e8957803591610fda83610fab565b92610fe86040519485610f32565b808452602092838086019260051b820101928311610e89578301905b828210611012575050505090565b81358152908301908301611004565b60001981146110305760010190565b634e487b7160e01b600052601160045260246000fd5b805482101561105e5760005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b90600182811c921680156110a4575b602083101461108e57565b634e487b7160e01b600052602260045260246000fd5b91607f1691611083565b6000929181546110bd81611074565b9260019180831690811561111657506001146110da575b50505050565b90919293945060005260209081600020906000915b85831061110557505050500190388080806110d4565b8054858401529183019181016110ef565b60ff19168452505050811515909102019150388080806110d4565b81811061113c575050565b60008155600101611131565b9190601f811161115757505050565b611183926000526020600020906020601f840160051c83019310611185575b601f0160051c0190611131565b565b9091508190611176565b9080821461126a576111a18154611074565b9067ffffffffffffffff8211610f005781906111c7826111c18654611074565b86611148565b600090601f83116001146111fe576000926111f3575b50508160011b916000199060031b1c1916179055565b0154905038806111dd565b81526020808220858352818320935090601f1985169083905b828210611251575050908460019594939210611238575b505050811b019055565b015460001960f88460031b161c1916905538808061122e565b8495819295850154815560018091019601940190611217565b5050565b919061127d576111839161118f565b634e487b7160e01b600052600060045260246000fd5b90815491600160401b831015610f00578261046491600161118395018155611046565b604051906080820182811067ffffffffffffffff821117610f0057604052606080838181528160208201528160408201520152565b9190820391821161103057565b60ff1660ff81146110305760010190565b90815491600160401b831015610f00578261132c91600161118395018155611046565b90919082549060031b91821b91600019901b1916179055565b9190820180921161103057565b8054600160401b811015610f005761136f91600182018155611046565b819291549060031b9160018060a01b03809116831b921b1916179055565b805182101561105e5760209160051b010190565b92156113bf5750506040019081516064039160648311611030575190565b82518211156113dd5750505190816064039160648311611030579190565b909291602001928351918282106000146114035750506064039160648311611030575190565b9350919050565b80546001600160a01b0390811680151594939091908561144d575b5050508261143257505090565b600101548015925090821561144657505090565b1115905090565b1614925038808061142556fea26469706673582212207574d8775ff19971d87a4c14e88a5ce21a000cb17399e66783905d9df9540a2364736f6c63430008120033";

type AngelCoreStructConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AngelCoreStructConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AngelCoreStruct__factory extends ContractFactory {
  constructor(...args: AngelCoreStructConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AngelCoreStruct> {
    return super.deploy(overrides || {}) as Promise<AngelCoreStruct>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): AngelCoreStruct {
    return super.attach(address) as AngelCoreStruct;
  }
  override connect(signer: Signer): AngelCoreStruct__factory {
    return super.connect(signer) as AngelCoreStruct__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AngelCoreStructInterface {
    return new utils.Interface(_abi) as AngelCoreStructInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AngelCoreStruct {
    return new Contract(address, _abi, signerOrProvider) as AngelCoreStruct;
  }
}
