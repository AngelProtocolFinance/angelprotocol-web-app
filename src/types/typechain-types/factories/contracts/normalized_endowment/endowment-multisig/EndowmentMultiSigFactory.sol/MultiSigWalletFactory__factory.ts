/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  MultiSigWalletFactory,
  MultiSigWalletFactoryInterface,
} from "../../../../../contracts/normalized_endowment/endowment-multisig/EndowmentMultiSigFactory.sol/MultiSigWalletFactory";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "implementationAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "proxyAdmin",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "instantiation",
        type: "address",
      },
    ],
    name: "ContractInstantiation",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "endowmentId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "emitterAddress",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "owners",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "required",
        type: "uint256",
      },
    ],
    name: "create",
    outputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "endowmentIdToMultisig",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "creator",
        type: "address",
      },
    ],
    name: "getInstantiationCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "instantiations",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isInstantiation",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "implementationAddress",
        type: "address",
      },
    ],
    name: "updateImplementation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "proxyAdmin",
        type: "address",
      },
    ],
    name: "updateProxyAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080346100d757601f61166538819003918201601f19168301916001600160401b038311848410176100dc5780849260409485528339810103126100d757610052602061004b836100f2565b92016100f2565b600380546001600160a01b03198082163390811790935592936001600160a01b0392839283167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a316926100aa841515610106565b16916100b7831515610106565b816004541617600455600554161760055560405161152090816101458239f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b03821682036100d757565b1561010d57565b60405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964204164647265737360881b6044820152606490fdfe60806040526004803610156200001457600080fd5b600090813560e01c8063025b22bc14620006d65780630f990c5a146200035d5780632f4f3316146200031b57806357183c8214620002b9578063715018a614620002575780638da5cb5b146200022c5780638f83847814620001ef578063bb48cd3a14620001a1578063de15304c146200016d5763f2fde38b146200009857600080fd5b34620001695760203660031901126200016957620000b56200071c565b620000bf620007a0565b6001600160a01b03908116918215620001165750600354826bffffffffffffffffffffffff60a01b821617600355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a380f35b60849060206040519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b5080fd5b50346200016957602036600319011262000169579060209135815260028252604060018060a01b0391205416604051908152f35b8234620001ec576020366003190112620001ec57620001bf6200071c565b620001c9620007a0565b60018060a01b03166bffffffffffffffffffffffff60a01b600554161760055580f35b80fd5b8234620001ec576020366003190112620001ec576020906040906001600160a01b036200021b6200071c565b168152600183522054604051908152f35b8234620001ec5780600319360112620001ec576003546040516001600160a01b039091168152602090f35b8234620001ec5780600319360112620001ec5762000274620007a0565b600380546001600160a01b031981169091556000906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b8234620001ec576040366003190112620001ec57620002d76200071c565b6001600160a01b03908116825260016020526040822080546024359390841015620001ec57506020926200030b9162000771565b9190546040519260031b1c168152f35b8234620001ec576020366003190112620001ec5760209060ff906040906001600160a01b036200034a6200071c565b1681528084522054166040519015158152f35b509034620001ec576080366003190112620001ec57602435906001600160a01b0382168203620001ec576044359167ffffffffffffffff83116200016957366023840112156200016957828401359267ffffffffffffffff84116200062d578360051b9060405194620003d4602084018762000738565b85526024602086019282010190368211620006d257602401915b818310620006ac5750506040516325a79f8d60e21b6020820152853560248201526001600160a01b038316604482015260a06064820152905062000458816200043b60c4820187620007f9565b60643560848301528560a483015203601f19810183528262000738565b845460055460405192916001600160a01b03918216911667ffffffffffffffff610cb28501908111908511176200069957610cb2620008398539610cb28401526020610cb28401015260606040610cb28401015281815191826060610cb284010152855b8381106200067c575050610cb281018083016080908101879052601f909301601f19160103019083f080156200066d576001600160a01b03908116939082163b156200067857604051635331afd160e11b8152858101859052853560248201526001600160a01b038316604482015260c060648201529183918391908290849082906200054e9060c4830190620007f9565b606435608483015260a4820183905203926001600160a01b03165af180156200066d5762000640575b508181528060205260408120600160ff19825416179055338152600160205260408120805490680100000000000000008210156200062d5793620005c78260209660016040969501815562000771565b81549060031b9086821b9160018060a01b03901b19161790557f4fb057ad4a26ed17a57957fa69c306f11987596069b89521c511fc9a894e61618380513381528688820152a1358152600284522080546001600160a01b03191682179055604051908152f35b634e487b7160e01b835260418552602483fd5b67ffffffffffffffff81116200065a576040523862000577565b634e487b7160e01b825260418452602482fd5b6040513d84823e3d90fd5b8280fd5b60208282018101516080610cb288018401015285935001620004bc565b634e487b7160e01b865260418852602486fd5b82356001600160a01b0381168103620006ce57815260209283019201620003ee565b8580fd5b8480fd5b5034620001695760203660031901126200016957620006f46200071c565b620006fe620007a0565b81546001600160a01b0319166001600160a01b039190911617905580f35b600435906001600160a01b03821682036200073357565b600080fd5b90601f8019910116810190811067ffffffffffffffff8211176200075b57604052565b634e487b7160e01b600052604160045260246000fd5b80548210156200078a5760005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b6003546001600160a01b03163303620007b557565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b90815180825260208080930193019160005b8281106200081a575050505090565b83516001600160a01b0316855293810193928101926001016200080b56fe604060808152346200030c5762000cb2803803806200001e8162000311565b9283398101906060818303126200030c576200003a816200034d565b916020926200004b8484016200034d565b8584015190936001600160401b0391908282116200030c57019280601f850112156200030c5783519362000089620000838662000362565b62000311565b94808652878601928882840101116200030c578288620000aa93016200037e565b823b15620002b2577f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80546001600160a01b03199081166001600160a01b0386811691821790935590959194600093909290917fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b8580a2805115801590620002aa575b620001fb575b50505050507fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103937f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f86865493815196818616885216958684820152a18315620001a95750161790555161085590816200045d8239f35b60849086519062461bcd60e51b82526004820152602660248201527f455243313936373a206e65772061646d696e20697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b895194606086019081118682101762000296578a52602785527f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c89860152660819985a5b195960ca1b8a86015251620002809493929183918291845af4903d156200028c573d62000270620000838262000362565b90815280938a3d92013e620003a3565b50388080808062000133565b60609250620003a3565b634e487b7160e01b85526041600452602485fd5b50836200012d565b865162461bcd60e51b815260048101879052602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608490fd5b600080fd5b6040519190601f01601f191682016001600160401b038111838210176200033757604052565b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b03821682036200030c57565b6001600160401b0381116200033757601f01601f191660200190565b60005b838110620003925750506000910152565b818101518382015260200162000381565b91929015620004085750815115620003b9575090565b3b15620003c35790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b8251909150156200041c5750805190602001fd5b6044604051809262461bcd60e51b8252602060048301526200044e81518092816024860152602086860191016200037e565b601f01601f19168101030190fdfe60806040526004361015610018575b366100a6576100a6565b6000803560e01c80636e9960c3146100725763aaf10f421461003a575061000e565b3461006f578060031936011261006f57600080516020610800833981519152546040516001600160a01b039091168152602090f35b80fd5b503461006f578060031936011261006f576000805160206107e0833981519152546001600160a01b03166080908152602090f35b6000805160206107e0833981519152546001600160a01b031633036101c6576000356001600160e01b031916631b2ce7f360e11b81036100f157506100e9610426565b602081519101f35b63278f794360e11b810361010d57506101086105c8565b6100e9565b6308f2839760e41b81036101245750610108610350565b6303e1469160e61b810361013b5750610108610275565b635c60da1b60e01b03610150576101086102ae565b60405162461bcd60e51b815260206004820152604260248201527f5472616e73706172656e745570677261646561626c6550726f78793a2061646d60448201527f696e2063616e6e6f742066616c6c6261636b20746f2070726f78792074617267606482015261195d60f21b608482015260a490fd5b60008051602061080083398151915254600090819081906001600160a01b0316368280378136915af43d82803e156101fc573d90f35b3d90fd5b634e487b7160e01b600052604160045260246000fd5b6040810190811067ffffffffffffffff82111761023257604052565b610200565b6020810190811067ffffffffffffffff82111761023257604052565b90601f8019910116810190811067ffffffffffffffff82111761023257604052565b61027d610659565b60018060a01b036000805160206107e08339815191525416604051906020820152602081526102ab81610216565b90565b6102b6610659565b60018060a01b036000805160206108008339815191525416604051906020820152602081526102ab81610216565b600435906001600160a01b03821682036102fa57565b600080fd5b60209060031901126102fa576004356001600160a01b03811681036102fa5790565b67ffffffffffffffff811161023257601f01601f191660200190565b6040519061034a82610237565b60008252565b610358610659565b366004116102fa576001600160a01b0380610372366102ff565b166000805160206107e0833981519152917f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f604084549281519084168152846020820152a181156103d2576001600160a01b0319161790556102ab61033d565b60405162461bcd60e51b815260206004820152602660248201527f455243313936373a206e65772061646d696e20697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b61042e610659565b366004116102fa576001600160a01b03610447366102ff565b166040519061045582610237565b60008252803b156104ec5760008051602061080083398151915280546001600160a01b03191682179055807fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b600080a28151158015906104e4575b6104ca575b50506040516104c381610237565b6000815290565b6104dc916104d6610660565b916106ba565b5038806104b5565b5060006104b0565b60405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608490fd5b803b156104ec5760008051602061080083398151915280546001600160a01b0319166001600160a01b0383169081179091557fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b600080a28151158015906105c0575b6105b1575050565b6105bd916104d6610660565b50565b5060016105a9565b366004116102fa5760403660031901126102fa576105e46102e4565b6024359067ffffffffffffffff82116102fa57366023830112156102fa5781600401359061061182610321565b9161061f6040519384610253565b80835236602482860101116102fa576020816000926024610651970183870137840101526001600160a01b0316610547565b6102ab61033d565b346102fa57565b604051906060820182811067ffffffffffffffff8211176102325760405260278252660819985a5b195960ca1b6040837f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c60208201520152565b6000806102ab9493602081519101845af43d156106f9573d916106dc83610321565b926106ea6040519485610253565b83523d6000602085013e61074d565b60609161074d565b1561070857565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b9192901561076d5750815115610761575090565b6102ab903b1515610701565b8251909150156107805750805190602001fd5b6040519062461bcd60e51b82528160208060048301528251908160248401526000935b8285106107c6575050604492506000838284010152601f80199101168101030190fd5b84810182015186860160440152938101938593506107a356feb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbca2646970667358221220b73d54cdeedb79ac10b05dcfd6196ca3c80a671a4fbd8a0e9e661d3360347dd764736f6c63430008120033a26469706673582212207e268fe00b9286c46395f3ee5224c3ecd045d8e191fcc026f08a98f29f6d05a764736f6c63430008120033";

type MultiSigWalletFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MultiSigWalletFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MultiSigWalletFactory__factory extends ContractFactory {
  constructor(...args: MultiSigWalletFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    implementationAddress: PromiseOrValue<string>,
    proxyAdmin: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MultiSigWalletFactory> {
    return super.deploy(
      implementationAddress,
      proxyAdmin,
      overrides || {}
    ) as Promise<MultiSigWalletFactory>;
  }
  override getDeployTransaction(
    implementationAddress: PromiseOrValue<string>,
    proxyAdmin: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      implementationAddress,
      proxyAdmin,
      overrides || {}
    );
  }
  override attach(address: string): MultiSigWalletFactory {
    return super.attach(address) as MultiSigWalletFactory;
  }
  override connect(signer: Signer): MultiSigWalletFactory__factory {
    return super.connect(signer) as MultiSigWalletFactory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MultiSigWalletFactoryInterface {
    return new utils.Interface(_abi) as MultiSigWalletFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MultiSigWalletFactory {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as MultiSigWalletFactory;
  }
}
