/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  ISubdaoEmitter,
  ISubdaoEmitterInterface,
} from "../../../../contracts/normalized_endowment/subdao/ISubdaoEmitter";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "subdao",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint32",
            name: "id",
            type: "uint32",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "quorum",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "threshold",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "votingPeriod",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timelockPeriod",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expirationPeriod",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "proposalDeposit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "snapshotPeriod",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "enum AngelCoreStruct.TokenType",
                name: "token",
                type: "uint8",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "existingData",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "newInitialSupply",
                    type: "uint256",
                  },
                  {
                    internalType: "string",
                    name: "newName",
                    type: "string",
                  },
                  {
                    internalType: "string",
                    name: "newSymbol",
                    type: "string",
                  },
                  {
                    components: [
                      {
                        internalType: "enum AngelCoreStruct.veTypeEnum",
                        name: "ve_type",
                        type: "uint8",
                      },
                      {
                        components: [
                          {
                            internalType: "uint128",
                            name: "value",
                            type: "uint128",
                          },
                          {
                            internalType: "uint256",
                            name: "scale",
                            type: "uint256",
                          },
                          {
                            internalType: "uint128",
                            name: "slope",
                            type: "uint128",
                          },
                          {
                            internalType: "uint128",
                            name: "power",
                            type: "uint128",
                          },
                        ],
                        internalType: "struct AngelCoreStruct.veTypeData",
                        name: "data",
                        type: "tuple",
                      },
                    ],
                    internalType: "struct AngelCoreStruct.veType",
                    name: "veBondingType",
                    type: "tuple",
                  },
                  {
                    internalType: "string",
                    name: "veBondingName",
                    type: "string",
                  },
                  {
                    internalType: "string",
                    name: "veBondingSymbol",
                    type: "string",
                  },
                  {
                    internalType: "uint256",
                    name: "veBondingDecimals",
                    type: "uint256",
                  },
                  {
                    internalType: "address",
                    name: "veBondingReserveDenom",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "veBondingReserveDecimals",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "veBondingPeriod",
                    type: "uint256",
                  },
                ],
                internalType: "struct AngelCoreStruct.DaoTokenData",
                name: "data",
                type: "tuple",
              },
            ],
            internalType: "struct AngelCoreStruct.DaoToken",
            name: "token",
            type: "tuple",
          },
          {
            internalType: "enum AngelCoreStruct.EndowmentType",
            name: "endowType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "endowOwner",
            type: "address",
          },
          {
            internalType: "address",
            name: "registrarContract",
            type: "address",
          },
        ],
        internalType: "struct subDaoMessage.InstantiateMsg",
        name: "instantiateMsg",
        type: "tuple",
      },
    ],
    name: "initializeSubdao",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFromSubdao",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferSubdao",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "registrarContract",
            type: "address",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "address",
            name: "daoToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "veToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "swapFactory",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "quorum",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "threshold",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "votingPeriod",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timelockPeriod",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expirationPeriod",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "proposalDeposit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "snapshotPeriod",
            type: "uint256",
          },
        ],
        internalType: "struct subDaoStorage.Config",
        name: "config",
        type: "tuple",
      },
    ],
    name: "updateSubdaoConfig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "creator",
            type: "address",
          },
          {
            internalType: "enum subDaoStorage.PollStatus",
            name: "status",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "yesVotes",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "noVotes",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "startBlock",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "startTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endHeight",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "title",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "string",
            name: "link",
            type: "string",
          },
          {
            components: [
              {
                internalType: "uint256[]",
                name: "order",
                type: "uint256[]",
              },
              {
                internalType: "address[]",
                name: "contractAddress",
                type: "address[]",
              },
              {
                internalType: "bytes[]",
                name: "execution_message",
                type: "bytes[]",
              },
            ],
            internalType: "struct subDaoStorage.ExecuteData",
            name: "executeData",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "depositAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalBalanceAtEndPoll",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "stakedAmount",
            type: "uint256",
          },
        ],
        internalType: "struct subDaoStorage.Poll",
        name: "poll",
        type: "tuple",
      },
    ],
    name: "updateSubdaoPoll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "creator",
            type: "address",
          },
          {
            internalType: "enum subDaoStorage.PollStatus",
            name: "status",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "yesVotes",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "noVotes",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "startBlock",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "startTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endHeight",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "title",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "string",
            name: "link",
            type: "string",
          },
          {
            components: [
              {
                internalType: "uint256[]",
                name: "order",
                type: "uint256[]",
              },
              {
                internalType: "address[]",
                name: "contractAddress",
                type: "address[]",
              },
              {
                internalType: "bytes[]",
                name: "execution_message",
                type: "bytes[]",
              },
            ],
            internalType: "struct subDaoStorage.ExecuteData",
            name: "executeData",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "depositAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalBalanceAtEndPoll",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "stakedAmount",
            type: "uint256",
          },
        ],
        internalType: "struct subDaoStorage.Poll",
        name: "poll",
        type: "tuple",
      },
      {
        internalType: "enum subDaoStorage.PollStatus",
        name: "pollStatus",
        type: "uint8",
      },
    ],
    name: "updateSubdaoPollAndStatus",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "pollCount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalShare",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalDeposit",
            type: "uint256",
          },
        ],
        internalType: "struct subDaoStorage.State",
        name: "state",
        type: "tuple",
      },
    ],
    name: "updateSubdaoState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pollId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "voter",
        type: "address",
      },
      {
        components: [
          {
            internalType: "enum subDaoStorage.VoteOption",
            name: "vote",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "balance",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "voted",
            type: "bool",
          },
        ],
        internalType: "struct subDaoStorage.VoterInfo",
        name: "voterInfo",
        type: "tuple",
      },
    ],
    name: "updateVotingStatus",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class ISubdaoEmitter__factory {
  static readonly abi = _abi;
  static createInterface(): ISubdaoEmitterInterface {
    return new utils.Interface(_abi) as ISubdaoEmitterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ISubdaoEmitter {
    return new Contract(address, _abi, signerOrProvider) as ISubdaoEmitter;
  }
}
